piece base, body, head,tail,rsack,lsack, flare, aimy1,
		lfthigh, lbthigh, rfthigh, rbthigh, 
		lfknee, lbknee, rfknee, rbknee, 
		lfshin, lbshin, rfshin, rbshin, 
		lffoot, lbfoot, rffoot, rbfoot;


// Signal definitions
#define SIGNAL_AIM1 256
#define SIGNAL_AIM2 512
#define SIGNAL_MOVE 1

#include "../recoil_common_includes.h"

static-var maxSpeed, animFramesPerKeyframe, isMoving, animSpeed, gun_1, isDying;

// For N:\animations\Raptors\raptor_walk_remaster_v2.blend Created by https://github.com/Beherith/Skeletor_S3O V((0, 3, 5))
#define MOVESCALE 40 //Higher values are bigger, 100 is default
#define MOVESPEED 3
#define animAmplitude 110
#define LUHAND lupperarm  //define these as the left and right head thingies
#define RUHAND rupperarm  
#define LLHAND lupperarm  //define these as the left and right head thingies
#define RLHAND rupperarm  
#define SIGNAL_MOVE 1
#include "raptor_walk_allterrain.h"


#define IDLEMOVESCALE 40
#define IDLEAMPLITUDE 100
#define IDLESPEED 15
#include "raptor_idle_allterrain.h"


#define DEATHSCALE 40 //Higher values are bigger, 100 is default
#define DEATHAMPLIDUTE 100 //Higher values are bigger, 100 is default
#define DEATHSPEED 10
#include "raptor_death_allterrain.h"
//use call-script DeathAnim(); from Killed()


#define BASEPIECE body //needed for HitByWeapon
#define HITSPEED <35.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 4
#define MAXTILT 100
#include "raptor_hitbyweapon.h"


#include "raptor_allterrain_swim.h"
#include "raptor_create_move_swim.h"

#include "raptor_killed_allterrain.h"

AimFromWeapon1(pieceIndex)
	{	pieceIndex=head;	}

QueryWeapon1(pieceIndex)
	{	pieceIndex=head; }

AimWeapon1(heading,pitch)
	{
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	if (heading > <60> ) heading = <60>;
	if (heading < <-60> ) heading = <-60>;
	if (pitch > <60> ) pitch = <60>;
	if (pitch < <-60> ) pitch = <-60>;
	turn aimy1 to y-axis heading speed <250.0>;
	turn aimy1 to x-axis <0.0> - pitch speed <200.0>;
	wait-for-turn aimy1 around y-axis;
	start-script RestoreAfterDelay();
	return(TRUE);
	}
	
Shot1()
	{
	turn lsack to y-axis <40> speed [1];
	turn rsack to y-axis <-40> speed [1];
	wait-for-turn lsack around y-axis;
	turn lsack to y-axis <0> speed [0.3];
	turn rsack to y-axis <0> speed [0.3];
	}
	
