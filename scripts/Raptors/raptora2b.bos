piece base, body, head,tail,lthigh,lknee,lshin,lfoot,rthigh,rknee,rshin,rfoot,lforearml,lbladel,rforearml,rbladel,lforearmu,lbladeu,rforearmu,rbladeu,aimy1;


// Signal definitions
#define SIGNAL_AIM1 256
#define SIGNAL_AIM2 512

#include "../recoil_common_includes.h"


static-var gun_1,maxSpeed, animFramesPerKeyframe, isMoving, animSpeed,aaheading, aapitch,isDying;

// For N:\animations\Raptors\raptor_walk_remaster_v2.blend Created by https://github.com/Beherith/Skeletor_S3O V((0, 3, 5))
#define MOVESCALE 100 //Higher values are bigger, 100 is default
#define MOVESPEED 10
#define animAmplitude 41
#define LUHAND lforearmu  //define these as the left and right head thingies
#define RUHAND rforearmu  
#define LLHAND lforearml  //define these as the left and right head thingies
#define RLHAND rforearml  
#define SIGNAL_MOVE 1
#include "raptor_walk_2legged_v2.h"


#define IDLEMOVESCALE 100
#define IDLEAMPLITUDE 100
#define IDLESPEED 23
#include "raptor_idle_2legged_v2.h"


#define DEATHSCALE 100 //Higher values are bigger, 100 is default
#define DEATHAMPLIDUTE 100 //Higher values are bigger, 100 is default
#define DEATHSPEED 15
#include "raptor_death_2legged_v2.h"
//use call-script DeathAnim(); from Killed()



#define BASEPIECE body //needed for HitByWeapon
#define HITSPEED <20.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 8
#define MAXTILT 100
#include "raptor_hitbyweapon.h"

#include "raptor_death_2legged_ptaq.h"

#include "raptor_killed_2legged.h"

#include "raptor_swim_2legged_v1.h"
#include "raptor_create_move_swim.h"


AimFromWeapon1(pieceIndex)
	{	pieceIndex=head;	}

QueryWeapon1(pieceIndex)
	{	pieceIndex=head; }
	
		
AimFromWeapon2(pieceIndex)
	{	pieceIndex=head;	}

QueryWeapon2(pieceIndex)
	{	pieceIndex=head; }


AimWeapon1(heading,pitch)
	{
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;	
	
	if (heading > <60> ) heading = <60>;
	if (heading < <-60> ) heading = <-60>;
	if (pitch > <60> ) pitch = <60>;
	if (pitch < <-60> ) pitch = <-60>;
	turn aimy1 to y-axis heading speed <250.0>;
	turn aimy1 to x-axis <0.0> - pitch speed <200.0>;
		
	//wait-for-turn head around y-axis;
	start-script RestoreAfterDelay();
	
	return(TRUE);
	}
	
AimWeapon2(heading,pitch)
	{
	aapitch = pitch;
	aaheading = heading;
	return(TRUE);
	}

		
Shot1()
	{
	++gun_1;
	if (gun_1 > 4)
		{
		gun_1 = 1;
		}
	if (gun_1 == 1)
		{
		turn lforearmu to y-axis <-140> speed <600>;
		turn lbladeu to y-axis <140> speed <600>;
		wait-for-turn lbladeu around y-axis;
		turn lforearmu to y-axis <0> speed <120>;
		turn lbladeu to y-axis <0> speed <120>;
		}
	if (gun_1 == 2)
		{
		turn lforearml to y-axis <-140> speed <600>;
		turn lbladel to y-axis <140> speed <600>;
		wait-for-turn lbladel around y-axis;
		turn lforearml to y-axis <0> speed <120>;
		turn lbladel to y-axis <0> speed <120>;
		}
	if (gun_1 == 3)
		{
		turn rforearmu to y-axis <140> speed <600>;
		turn rbladeu to y-axis <-140> speed <600>;
		wait-for-turn rbladeu around y-axis;
		turn rforearmu to y-axis <0> speed <120>;
		turn rbladeu to y-axis <0> speed <120>;
		}
	if (gun_1 == 4)
		{
		turn rforearml to y-axis <140> speed <600>;
		turn rbladel to y-axis <-140> speed <600>;
		wait-for-turn rbladel around y-axis;
		turn rforearml to y-axis <0> speed <120>;
		turn rbladel to y-axis <0> speed <120>;
		}
	}

Shot2()
	{   
	    turn head to x-axis 0 -aapitch speed <400>;
        turn head to y-axis aaheading speed <300>;
	    wait-for-turn head around x-axis;
		turn lforearmu to y-axis <-140> speed <600>;
		turn lbladeu to y-axis <140> speed <600>;
		turn lforearml to y-axis <-140> speed <600>;
		turn lbladel to y-axis <140> speed <600>;	
		turn rforearmu to y-axis <140> speed <600>;
		turn rbladeu to y-axis <-140> speed <600>;
		turn rforearml to y-axis <140> speed <600>;
		turn rbladel to y-axis <-140> speed <600>;
		emit-sfx 1024+3 from lforearmu;
		emit-sfx 1024+3 from lforearml;
		emit-sfx 1024+3 from rforearmu;
		emit-sfx 1024+3 from rforearml;
		wait-for-turn lbladeu around y-axis;
		wait-for-turn lbladel around y-axis;
		wait-for-turn rbladeu around y-axis;
		wait-for-turn rbladel around y-axis;				
		turn lforearmu to y-axis <0> speed <120>;
		turn lbladeu to y-axis <0> speed <120>;
		turn lforearml to y-axis <0> speed <120>;
		turn lbladel to y-axis <0> speed <120>;
		turn rforearmu to y-axis <0> speed <120>;
		turn rbladeu to y-axis <0> speed <120>;
		turn rforearml to y-axis <0> speed <120>;
		turn rbladel to y-axis <0> speed <120>;
		turn head to y-axis 0 speed <120>;
  	    turn head to x-axis 0 speed <120>; 
    }
    




