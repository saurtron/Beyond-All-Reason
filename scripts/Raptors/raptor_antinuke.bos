
#include "../recoil_common_includes.h"

piece  base, dbl, dbr, dtr, dtl, dummy;

static-var  restore_delay, gun_1;

// Signal definitions
#define SIGNAL_AIM1 256

Create()
{
	hide dummy;
	restore_delay = 3000;
}

#define BASEPIECE base
#define MAXTILT 0
#include "../unit_hitbyweaponid_and_smoke.h"

Activate()
{
	move dbl to x-axis [-8] speed [8];
	move dbl to z-axis [-8] speed [8];
	move dbr to x-axis [8] speed [8];
	move dbr to z-axis [-8] speed [8];
	move dtl to x-axis [-8] speed [8];
	move dtl to z-axis [8] speed [8];
	move dtr to x-axis [8] speed [8];
	move dtr to z-axis [8] speed [8];	
}

Deactivate()
{
	move dbl to x-axis [0] speed [8];
	move dbl to z-axis [0] speed [8];
	move dbr to x-axis [0] speed [8];
	move dbr to z-axis [0] speed [8];
	move dtl to x-axis [0] speed [8];
	move dtl to z-axis [0] speed [8];
	move dtr to x-axis [0] speed [8];
	move dtr to z-axis [0] speed [8];	
}

SetMaxReloadTime(reloadMS)
{
	restore_delay = reloadMS * 2;
}

AimWeapon1(heading, pitch)
{
	move dbl to x-axis [-8] speed [8];
	move dbl to z-axis [-8] speed [8];
	move dbr to x-axis [8] speed [8];
	move dbr to z-axis [-8] speed [8];
	move dtl to x-axis [-8] speed [8];
	move dtl to z-axis [8] speed [8];
	move dtr to x-axis [8] speed [8];
	move dtr to z-axis [8] speed [8];	
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	return (1);
}

FireWeapon1()
{
}

QueryWeapon1(pieceIndex)
{
	pieceIndex=dummy;
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex=dummy;
}



Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode dbr type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode dtr type BITMAPONLY | NOHEATCLOUD;
		explode dtl type BITMAPONLY | NOHEATCLOUD;
		explode dbl type BITMAPONLY | NOHEATCLOUD;
		explode dummy type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode dbr type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode dtr type FALL | NOHEATCLOUD;
		explode dtl type FALL | NOHEATCLOUD;
		explode dbl type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode dummy type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode dbr type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode dtr type SMOKE | FALL | NOHEATCLOUD;
		explode dtl type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode dbl type SMOKE | FALL | NOHEATCLOUD;
		explode dummy type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode dbr type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode dtr type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode dtl type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode dbl type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode dummy type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
