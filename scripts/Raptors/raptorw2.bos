piece base, body, head,tail,lblade,mblade,rblade,rsack,lsack,rowing,lowing, riwing, liwing;


// Signal definitions
#define SIGNAL_AIM1 256
#define SIGNAL_AIM2 512
#define SIGNAL_MOVE 1

#include "../recoil_common_includes.h"


// For N:\animations\Raptors\raptor_flight_2seg_anim_v1.blend Created by https://github.com/Beherith/Skeletor_S3O V((0, 3, 3))
#define MOVESCALE 200
#define MOVESPEED 3
// this animation uses the static-var animFramesPerKeyframe which contains how many frames each keyframe takes
static-var  maxSpeed, animFramesPerKeyframe, isMoving, deltaSpeed;
#define SIGNAL_MOVE 1

#include "raptor_fly.h"
// REMEMBER TO animspeed = 3 in Create() !!
static-var nowSpeed, prevSpeed;
UnitSpeed(){
	maxSpeed = get MAX_SPEED; // this returns cob units per frame i think
	animFramesPerKeyframe = MOVESPEED; //we need to calc the frames per keyframe value, from the known animtime
	maxSpeed = maxSpeed + (maxSpeed /(2*animFramesPerKeyframe)); // add fudge
	while(TRUE){
		nowSpeed = (get CURRENT_SPEED);
		deltaSpeed = nowSpeed - prevSpeed;
		prevSpeed = nowSpeed;
		//animSpeed = nowSpeed;
		//if (animSpeed<1) animSpeed=1;
		//animSpeed = (maxSpeed * 3) / animSpeed; 
		//if (animSpeed<1) animSpeed=1;
		//if (animspeed>6) animSpeed = 6;
		deltaSpeed = deltaSpeed /1000;
		animSpeed = MOVESPEED;
		if (deltaSpeed > 10) animspeed = MOVESPEED -1;
		if (deltaSpeed < -10) animspeed = MOVESPEED +1;
		 
		
		//get PRINT(deltaSpeed/1000, nowSpeed/1000, animSpeed,GET(GAME_FRAME)); //how to print debug info from bos
		sleep 198;
	}
	
	//animSpeed = 3;
}
StartMoving(reversing){
	signal SIGNAL_MOVE;
	isMoving=TRUE;
	start-script Walk();
}
StopMoving(){
	signal SIGNAL_MOVE;
	isMoving=FALSE;
	call-script StopWalking();
}

Create()
{
	nowSpeed = 0;
	prevSpeed = 0;
	animSpeed = 3;
	deltaSpeed = 0;
	animAmplitude = 100;
	emit-sfx 1024+2 from body;
	start-script UnitSpeed();
}

AimFromWeapon1(pieceIndex)
	{	pieceIndex=head;	}

QueryWeapon1(pieceIndex)
	{	pieceIndex=head; }

RestoreAfterDelay()
	{
	sleep 500;
	turn head to x-axis <0> speed <200>;
	}

AimWeapon1(heading,pitch)
	{
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	turn head to x-axis 0 -pitch speed <200>;
	wait-for-turn head around y-axis;
	start-script RestoreAfterDelay();
	
	return(TRUE);
	}
	
Shot1()
	{
	turn lsack to y-axis <40> speed [1];
	turn rsack to y-axis <-40> speed [1];
	move rsack to x-axis [-1] speed [1];
	move lsack to x-axis [1] speed [1];
	move mblade to z-axis [-20] now;
	wait-for-turn lsack around y-axis;
	turn lsack to y-axis <0> speed [0.3];
	turn rsack to y-axis <0> speed [0.3];
	move rsack to x-axis [0] speed [0.3];
	move lsack to x-axis [0] speed [0.3];
	move mblade to z-axis <0> speed [20];
	}

	

	
HitByWeaponId()
	{
	return 100;
	}


#include "raptor_killed_flying.h"