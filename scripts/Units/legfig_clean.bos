
#include "../recoil_common_includes.h"


piece chassis, engine, thrust, gun, wingA, wingAconn, wingB, wingBconn, wingC, wingCconn, wingD, wingDconn, flare;

static-var  gun_1;

#define BASEPIECE chassis
#define HITSPEED <105.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 1
#define MAXTILT 100

#define BARRELROLL_PIECE chassis
#define BARRELROLLSPEEED <200>
#include "../air_barrelroll.h"


Create()
{

	hide flare;
	hide thrust;
	turn wingA to z-axis <60> now;
	turn wingAconn to z-axis <-80> now;
	turn wingB to z-axis <-60> now;
	turn wingbconn to z-axis <80> now;
	turn wingC to z-axis <-60> now;
	turn wingCconn to z-axis <80> now;
	turn wingD to z-axis <60> now;
	turn wingDconn to z-axis <-80> now;
	gun_1 = 0;
	SLEEP_UNTIL_UNITFINISHED;
	start-script BarrelRoll();
}

Activate()
{
	turn wingA to z-axis <0> speed <60>;
	turn wingAconn to z-axis <0> speed <60>;
	turn wingB to z-axis <0> speed <60>;
	turn wingbconn to z-axis <0> speed <60>;
	turn wingC to z-axis <0> speed <60>;
	turn wingCconn to z-axis <0> speed <60>;
	turn wingD to z-axis <0> speed <60>;
	turn wingDconn to z-axis <0> speed <60>;
	show thrust;
}

Deactivate()
{
	hide thrust;
	turn wingAconn to z-axis <-80> speed <120>;
	turn wingbconn to z-axis <80> speed <120>;
	turn wingCconn to z-axis <80> speed <120>;
	turn wingDconn to z-axis <-80> speed <120>;
	wait-for-turn wingDconn around z-axis;
	turn wingA to z-axis <60> speed <60>;
	turn wingB to z-axis <-60> speed <60>;
	turn wingC to z-axis <-60> speed <60>;
	turn wingD to z-axis <60> speed <60>;
}

AimWeapon1(heading, pitch)
{
	return (1);
}

FireWeapon1()
{
	emit-sfx 1024 + 0 from flare;
	gun_1 = !gun_1;
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = flare;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode chassis type BITMAPONLY | NOHEATCLOUD;
		explode engine type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode wingA type BITMAPONLY | NOHEATCLOUD;
		explode wingB type BITMAPONLY | NOHEATCLOUD;
		explode wingC type BITMAPONLY | NOHEATCLOUD;
		explode wingD type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode chassis type BITMAPONLY | NOHEATCLOUD;
		explode engine type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode wingA type BITMAPONLY | NOHEATCLOUD;
		explode wingB type BITMAPONLY | NOHEATCLOUD;
		explode wingC type BITMAPONLY | NOHEATCLOUD;
		explode wingD type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode chassis type BITMAPONLY | NOHEATCLOUD;
		explode engine type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode wingA type BITMAPONLY | NOHEATCLOUD;
		explode wingB type BITMAPONLY | NOHEATCLOUD;
		explode wingC type BITMAPONLY | NOHEATCLOUD;
		explode wingD type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode chassis type BITMAPONLY | NOHEATCLOUD;
		explode engine type BITMAPONLY | NOHEATCLOUD;
		explode wingA type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode wingB type BITMAPONLY | NOHEATCLOUD;
		explode wingC type BITMAPONLY | NOHEATCLOUD;
		explode wingD type BITMAPONLY | NOHEATCLOUD;
	return corpsetype;
}
