
#include "../recoil_common_includes.h"

piece  pelvis, aimy1, torso, aimx1, rturret, rflare, rrecoil, lturret, lflare, lrecoil, rlauncher, rocketflare, 
	ldoor, rdoor, lthigh, rleg, rankle, rfoot, rwake, rtoe1, rtoe2, rtoe3, rthigh, lleg, lankle, lfoot, lwake, ltoe1, ltoe2, ltoe3;

static-var  isMoving, isAiming, restore_delay, gun_left;

static-var animSpeed, maxSpeed, animFramesPerKeyframe, curSpeed, doorOpen;

// Signal definitions
#define SIGNAL_AIM1 256
#define SIGNAL_AIM3 1024
#define SIGNAL_MOVE 1
// Generated for N:\animations\corshiva_anim_v5_baketest.blend
// Using https://github.com/Beherith/Skeletor_S3O 
// this animation uses the static-var animSpeed which contains how many frames each keyframe takes
// Generated for N:\animations\corshiva_anim_v5_baketest.blend
// Using https://github.com/Beherith/Skeletor_S3O 
// this animation uses the static-var animSpeed which contains how many frames each keyframe takes
Walk() {//Created by https://github.com/Beherith/Skeletor_S3O from N:\animations\corshiva_anim_walk_v6.blend 
	if (isMoving) {
			turn lankle to x-axis <9.694950> speed <137.523174> / animSpeed; 
			turn lankle to z-axis <-0.373805> speed <11.236899> / animSpeed; 
			turn lankle to y-axis <-0.324764> speed <9.472937> / animSpeed; 
			turn lfoot to x-axis <-2.663796> speed <79.913892> / animSpeed; 
			turn lleg to x-axis <2.015531> speed <60.465923> / animSpeed; 
			turn lleg to y-axis <-1.207607> speed <36.228213> / animSpeed; 
			turn lthigh to x-axis <-33.656949> speed <1009.708470> / animSpeed; 
			turn lthigh to z-axis <1.269127> speed <38.073815> / animSpeed; 
			turn lthigh to y-axis <0.280342> speed <8.410272> / animSpeed; 
			turn ltoe1 to x-axis <-26.588330> speed <797.649896> / animSpeed; 
			turn lturret to x-axis <8.566328> speed <256.989855> / animSpeed; 
			turn lturret to z-axis <2.015462> speed <60.463861> / animSpeed; 
			turn lturret to y-axis <0.132739> speed <3.982185> / animSpeed; 
			move pelvis to z-axis [-1.167727] speed [35.031817] / animSpeed; 
			move pelvis to y-axis [1.037980] speed [31.139388] / animSpeed; 
			turn rankle to x-axis <-6.566497> speed <350.931307> / animSpeed; 
			turn rankle to z-axis <-0.635354> speed <19.037557> / animSpeed; 
			turn rfoot to x-axis <-10.227991> speed <306.839717> / animSpeed; 
			turn rfoot to z-axis <7.045505> speed <211.365147> / animSpeed; 
			turn rfoot to y-axis <-1.496729> speed <44.901861> / animSpeed; 
			turn rleg to x-axis <0.975974> speed <29.279218> / animSpeed; 
			turn rleg to z-axis <-2.847499> speed <85.424977> / animSpeed; 
			turn rleg to y-axis <2.126783> speed <63.803484> / animSpeed; 
			turn rthigh to x-axis <19.835078> speed <595.052330> / animSpeed; 
			turn rthigh to z-axis <-3.589988> speed <107.699639> / animSpeed; 
			turn rthigh to y-axis <2.578970> speed <77.369098> / animSpeed; 
			turn rtoe1 to x-axis <-4.485754> speed <134.572635> / animSpeed; 
			turn rtoe1 to z-axis <0.339559> speed <10.186757> / animSpeed; 
			turn rturret to x-axis <-4.335104> speed <130.053120> / animSpeed; 
			turn torso to x-axis <-3.763759> speed <112.912760> / animSpeed; 
		sleep 197;
	}
	while(isMoving) {
		if (isMoving) {
			turn lankle to x-axis <-36.575663> speed <1388.118384> / animSpeed; 
			turn lankle to z-axis <-1.310726> speed <28.107630> / animSpeed; 
			turn lankle to y-axis <-0.854192> speed <15.882829> / animSpeed; 
			turn lfoot to x-axis <4.766108> speed <222.897123> / animSpeed; 
			turn lfoot to z-axis <1.654374> speed <50.123613> / animSpeed; 
			turn lfoot to y-axis <1.036763> speed <30.204861> / animSpeed; 
			turn lleg to x-axis <80.656112> speed <2359.217451> / animSpeed; 
			turn lleg to z-axis <2.531850> speed <77.236290> / animSpeed; 
			turn lleg to y-axis <-4.185432> speed <89.334757> / animSpeed; 
			turn lthigh to x-axis <-84.899497> speed <1537.276448> / animSpeed; 
			turn lthigh to z-axis <12.058352> speed <323.676756> / animSpeed; 
			turn lthigh to y-axis <12.177105> speed <356.902866> / animSpeed; 
			turn ltoe1 to x-axis <4.766108> speed <940.633128> / animSpeed; 
			turn ltoe1 to z-axis <1.654374> speed <50.563249> / animSpeed; 
			turn ltoe1 to y-axis <1.036763> speed <29.810467> / animSpeed; 
			turn lturret to x-axis <4.811241> speed <112.652619> / animSpeed; 
			turn lturret to z-axis <-0.0> speed <60.463861> / animSpeed; 
			turn lturret to y-axis <-0.0> speed <3.982185> / animSpeed; 
			move pelvis to z-axis [0.194621] speed [40.870453] / animSpeed; 
			move pelvis to y-axis [0.778485] speed [7.784847] / animSpeed; 
			turn rankle to z-axis <-0.792556> speed <4.716040> / animSpeed; 
			turn rankle to y-axis <-0.244981> speed <5.864077> / animSpeed; 
			turn rfoot to x-axis <-2.167152> speed <241.825170> / animSpeed; 
			turn rfoot to z-axis <3.539444> speed <105.181829> / animSpeed; 
			turn rfoot to y-axis <-0.754409> speed <22.269576> / animSpeed; 
			turn rleg to x-axis <10.590140> speed <288.424982> / animSpeed; 
			turn rleg to z-axis <-3.438670> speed <17.735137> / animSpeed; 
			turn rleg to y-axis <2.612565> speed <14.573474> / animSpeed; 
			turn rthigh to x-axis <34.758273> speed <447.695848> / animSpeed; 
			turn rthigh to z-axis <-4.304390> speed <21.432071> / animSpeed; 
			turn rthigh to y-axis <3.407102> speed <24.843949> / animSpeed; 
			turn rtoe1 to x-axis <-32.450075> speed <838.929617> / animSpeed; 
			turn rtoe1 to z-axis <0.054972> speed <8.537591> / animSpeed; 
			turn rturret to x-axis <-9.524763> speed <155.689765> / animSpeed; 
			turn torso to x-axis <-5.310977> speed <46.416540> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) {
			turn lankle to x-axis <-3.998318> speed <977.320336> / animSpeed; 
			turn lankle to z-axis <-0.186133> speed <33.737789> / animSpeed; 
			turn lankle to y-axis <-0.508584> speed <10.368224> / animSpeed; 
			turn lfoot to x-axis <12.747711> speed <239.448110> / animSpeed; 
			turn lfoot to z-axis <-2.560290> speed <126.439909> / animSpeed; 
			turn lfoot to y-axis <-0.461975> speed <44.962150> / animSpeed; 
			turn lleg to x-axis <31.173533> speed <1484.477378> / animSpeed; 
			turn lleg to z-axis <-0.468289> speed <90.004179> / animSpeed; 
			turn lleg to y-axis <-5.079693> speed <26.827826> / animSpeed; 
			turn lthigh to x-axis <-41.170287> speed <1311.876312> / animSpeed; 
			turn lthigh to z-axis <4.594322> speed <223.920909> / animSpeed; 
			turn lthigh to y-axis <1.708732> speed <314.051190> / animSpeed; 
			turn ltoe1 to x-axis <1.940948> speed <84.754801> / animSpeed; 
			turn ltoe1 to z-axis <0.031240> speed <48.694030> / animSpeed; 
			turn ltoe1 to y-axis <0.013580> speed <30.695500> / animSpeed; 
			turn lturret to x-axis <2.660585> speed <64.519687> / animSpeed; 
			turn lturret to z-axis <6.0> speed <180.0> / animSpeed; 
			move pelvis to z-axis [1.297475] speed [33.085606] / animSpeed; 
			move pelvis to y-axis [0.064874] speed [21.408330] / animSpeed; 
			turn rankle to x-axis <-26.014456> speed <583.249097> / animSpeed; 
			turn rankle to z-axis <-0.987337> speed <5.843438> / animSpeed; 
			turn rankle to y-axis <-1.171215> speed <27.787030> / animSpeed; 
			turn rfoot to x-axis <5.893688> speed <241.825195> / animSpeed; 
			turn rfoot to z-axis <0.033383> speed <105.181834> / animSpeed; 
			turn rfoot to y-axis <-0.012090> speed <22.269571> / animSpeed; 
			turn rleg to x-axis <-18.357626> speed <868.432974> / animSpeed; 
			turn rleg to z-axis <-1.581744> speed <55.707799> / animSpeed; 
			turn rleg to y-axis <-0.688353> speed <99.027538> / animSpeed; 
			turn rthigh to x-axis <48.197647> speed <403.181217> / animSpeed; 
			turn rthigh to z-axis <-2.151510> speed <64.586422> / animSpeed; 
			turn rthigh to y-axis <2.615936> speed <23.734974> / animSpeed; 
			turn rtoe1 to x-axis <-8.385748> speed <721.929822> / animSpeed; 
			turn rturret to x-axis <-2.981100> speed <196.309888> / animSpeed; 
			turn rturret to z-axis <-6.0> speed <180.0> / animSpeed; 
			turn torso to x-axis <2.626489> speed <238.123978> / animSpeed; 
			turn torso to z-axis <2.264458> speed <67.933749> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) {
			turn lankle to x-axis <-12.747822> speed <262.485092> / animSpeed; 
			turn lankle to z-axis <1.038795> speed <36.747833> / animSpeed; 
			turn lankle to y-axis <0.364484> speed <26.192033> / animSpeed; 
			turn lfoot to x-axis <11.537478> speed <36.307006> / animSpeed; 
			turn lfoot to z-axis <-5.216160> speed <79.676125> / animSpeed; 
			turn lfoot to y-axis <-0.950731> speed <14.662664> / animSpeed; 
			turn lleg to x-axis <-1.541855> speed <981.461643> / animSpeed; 
			turn lleg to z-axis <2.072007> speed <76.208872> / animSpeed; 
			turn lleg to y-axis <-2.785284> speed <68.832286> / animSpeed; 
			turn lthigh to x-axis <0.945509> speed <1263.473862> / animSpeed; 
			turn lthigh to z-axis <3.199308> speed <41.850409> / animSpeed; 
			turn lthigh to y-axis <-1.803032> speed <105.352916> / animSpeed; 
			turn ltoe1 to x-axis <-0.0> speed <58.228430> / animSpeed; 
			turn lturret to x-axis <-3.096177> speed <172.702846> / animSpeed; 
			turn lturret to z-axis <3.990750> speed <60.277512> / animSpeed; 
			turn lturret to y-axis <0.131441> speed <3.943257> / animSpeed; 
			move pelvis to z-axis [-0.064874] speed [40.870453] / animSpeed; 
			move pelvis to y-axis [-0.648737] speed [21.408330] / animSpeed; 
			turn rankle to x-axis <-24.689437> speed <39.750574> / animSpeed; 
			turn rankle to z-axis <1.216623> speed <66.118794> / animSpeed; 
			turn rankle to y-axis <0.892613> speed <61.914838> / animSpeed; 
			turn rfoot to x-axis <29.513927> speed <708.607162> / animSpeed; 
			turn rleg to x-axis <-34.445207> speed <482.627451> / animSpeed; 
			turn rleg to z-axis <2.632058> speed <126.414069> / animSpeed; 
			turn rleg to y-axis <0.610823> speed <38.975257> / animSpeed; 
			turn rthigh to x-axis <22.847302> speed <760.510333> / animSpeed; 
			turn rthigh to z-axis <1.219963> speed <101.144182> / animSpeed; 
			turn rthigh to y-axis <-1.651413> speed <128.020465> / animSpeed; 
			turn rtoe1 to x-axis <15.678581> speed <721.929873> / animSpeed; 
			turn rturret to x-axis <3.696669> speed <200.333070> / animSpeed; 
			turn rturret to z-axis <-4.004882> speed <59.853537> / animSpeed; 
			turn torso to x-axis <-0.568635> speed <95.853722> / animSpeed; 
			turn torso to z-axis <1.132229> speed <33.966874> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) {
			turn lankle to x-axis <-6.514551> speed <186.998123> / animSpeed; 
			turn lankle to z-axis <0.629472> speed <12.279695> / animSpeed; 
			turn lankle to y-axis <0.043820> speed <9.619905> / animSpeed; 
			turn lfoot to x-axis <-10.227991> speed <652.964053> / animSpeed; 
			turn lfoot to z-axis <-7.045505> speed <54.880335> / animSpeed; 
			turn lfoot to y-axis <1.496729> speed <73.423790> / animSpeed; 
			turn lleg to x-axis <0.986456> speed <75.849313> / animSpeed; 
			turn lleg to z-axis <2.837920> speed <22.977392> / animSpeed; 
			turn lleg to y-axis <-2.127060> speed <19.746709> / animSpeed; 
			turn lthigh to x-axis <19.776328> speed <564.924578> / animSpeed; 
			turn lthigh to z-axis <3.589490> speed <11.705454> / animSpeed; 
			turn lthigh to y-axis <-2.567230> speed <22.925929> / animSpeed; 
			turn ltoe1 to x-axis <-4.050836> speed <121.525074> / animSpeed; 
			turn ltoe1 to z-axis <-0.305566> speed <9.166988> / animSpeed; 
			turn lturret to x-axis <-4.337379> speed <37.236068> / animSpeed; 
			turn lturret to z-axis <1.985734> speed <60.150458> / animSpeed; 
			move pelvis to z-axis [-1.167727] speed [33.085606] / animSpeed; 
			move pelvis to y-axis [1.037980] speed [50.601507] / animSpeed; 
			turn rankle to x-axis <9.814514> speed <1035.118516> / animSpeed; 
			turn rankle to z-axis <0.377564> speed <25.171755> / animSpeed; 
			turn rankle to y-axis <0.326197> speed <16.992465> / animSpeed; 
			turn rfoot to x-axis <-2.663796> speed <965.331702> / animSpeed; 
			turn rleg to x-axis <2.104297> speed <1096.485146> / animSpeed; 
			turn rleg to z-axis <0.046148> speed <77.577325> / animSpeed; 
			turn rleg to y-axis <1.213310> speed <18.074622> / animSpeed; 
			turn rthigh to x-axis <-33.804952> speed <1699.567634> / animSpeed; 
			turn rthigh to z-axis <-1.273222> speed <74.795556> / animSpeed; 
			turn rthigh to y-axis <-0.288088> speed <40.899740> / animSpeed; 
			turn rtoe1 to x-axis <-26.588330> speed <1268.007339> / animSpeed; 
			turn rturret to x-axis <8.566328> speed <146.089781> / animSpeed; 
			turn rturret to z-axis <-2.015462> speed <59.682607> / animSpeed; 
			turn torso to x-axis <-3.763759> speed <95.853716> / animSpeed; 
			turn torso to z-axis <-0.0> speed <33.966874> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) {
			turn lankle to x-axis <-5.727493> speed <23.611729> / animSpeed; 
			turn lankle to z-axis <0.742267> speed <3.383836> / animSpeed; 
			turn lfoot to x-axis <-2.167152> speed <241.825170> / animSpeed; 
			turn lfoot to z-axis <-3.539444> speed <105.181829> / animSpeed; 
			turn lfoot to y-axis <0.754409> speed <22.269576> / animSpeed; 
			turn lleg to x-axis <11.536584> speed <316.503853> / animSpeed; 
			turn lleg to z-axis <3.407875> speed <17.098655> / animSpeed; 
			turn lleg to y-axis <-2.749494> speed <18.673029> / animSpeed; 
			turn lthigh to x-axis <33.699399> speed <417.692125> / animSpeed; 
			turn lthigh to z-axis <4.226843> speed <19.120594> / animSpeed; 
			turn lthigh to y-axis <-3.259542> speed <20.769374> / animSpeed; 
			turn ltoe1 to x-axis <-32.995899> speed <868.351908> / animSpeed; 
			turn ltoe1 to z-axis <-0.110806> speed <5.842799> / animSpeed; 
			turn lturret to x-axis <-9.524763> speed <155.621519> / animSpeed; 
			turn lturret to z-axis <0.0> speed <59.572035> / animSpeed; 
			turn lturret to y-axis <-0.0> speed <3.949070> / animSpeed; 
			move pelvis to z-axis [0.194621] speed [40.870453] / animSpeed; 
			move pelvis to y-axis [0.778485] speed [7.784847] / animSpeed; 
			turn rankle to x-axis <-30.519204> speed <1210.011554> / animSpeed; 
			turn rankle to z-axis <1.209300> speed <24.952058> / animSpeed; 
			turn rankle to y-axis <0.788601> speed <13.872113> / animSpeed; 
			turn rfoot to x-axis <4.766108> speed <222.897123> / animSpeed; 
			turn rfoot to z-axis <-1.654374> speed <50.123613> / animSpeed; 
			turn rfoot to y-axis <-1.036763> speed <30.204861> / animSpeed; 
			turn rleg to x-axis <82.684125> speed <2417.394840> / animSpeed; 
			turn rleg to z-axis <-3.415607> speed <103.852627> / animSpeed; 
			turn rleg to y-axis <4.248802> speed <91.064760> / animSpeed; 
			turn rthigh to x-axis <-87.471480> speed <1609.995833> / animSpeed; 
			turn rthigh to z-axis <-13.459175> speed <365.578577> / animSpeed; 
			turn rthigh to y-axis <-13.812406> speed <405.729540> / animSpeed; 
			turn rtoe1 to x-axis <-12.323692> speed <427.939150> / animSpeed; 
			turn rturret to x-axis <4.811241> speed <112.652619> / animSpeed; 
			turn rturret to z-axis <0.0> speed <60.463861> / animSpeed; 
			turn rturret to y-axis <0.0> speed <3.982185> / animSpeed; 
			turn torso to x-axis <-5.081074> speed <39.519466> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) {
			turn lankle to x-axis <-25.823940> speed <602.893392> / animSpeed; 
			turn lankle to z-axis <0.973663> speed <6.941907> / animSpeed; 
			turn lankle to y-axis <1.154590> speed <30.696019> / animSpeed; 
			turn lfoot to x-axis <5.893688> speed <241.825195> / animSpeed; 
			turn lfoot to z-axis <-0.033383> speed <105.181834> / animSpeed; 
			turn lfoot to y-axis <0.012090> speed <22.269571> / animSpeed; 
			turn lleg to x-axis <-18.343376> speed <896.398808> / animSpeed; 
			turn lleg to z-axis <1.576090> speed <54.953551> / animSpeed; 
			turn lleg to y-axis <0.681091> speed <102.917562> / animSpeed; 
			turn lthigh to x-axis <48.046549> speed <430.414513> / animSpeed; 
			turn lthigh to z-axis <2.138355> speed <62.654649> / animSpeed; 
			turn lthigh to y-axis <-2.593736> speed <19.974180> / animSpeed; 
			turn ltoe1 to x-axis <5.893688> speed <1166.687630> / animSpeed; 
			turn lturret to x-axis <-2.981100> speed <196.309888> / animSpeed; 
			turn lturret to z-axis <6.0> speed <180.0> / animSpeed; 
			move pelvis to z-axis [1.297475] speed [33.085606] / animSpeed; 
			move pelvis to y-axis [0.064874] speed [21.408330] / animSpeed; 
			turn rankle to x-axis <-2.753621> speed <832.967503> / animSpeed; 
			turn rankle to z-axis <0.294476> speed <27.444723> / animSpeed; 
			turn rankle to y-axis <0.570783> speed <6.534548> / animSpeed; 
			turn rfoot to x-axis <12.747711> speed <239.448110> / animSpeed; 
			turn rfoot to z-axis <2.560290> speed <126.439909> / animSpeed; 
			turn rfoot to y-axis <0.461975> speed <44.962150> / animSpeed; 
			turn rleg to x-axis <32.232428> speed <1513.550932> / animSpeed; 
			turn rleg to z-axis <0.546301> speed <118.857242> / animSpeed; 
			turn rleg to y-axis <5.112386> speed <25.907531> / animSpeed; 
			turn rthigh to x-axis <-42.798973> speed <1340.175220> / animSpeed; 
			turn rthigh to z-axis <-4.763353> speed <260.874636> / animSpeed; 
			turn rthigh to y-axis <-1.932739> speed <356.390033> / animSpeed; 
			turn rtoe1 to x-axis <1.940948> speed <427.939176> / animSpeed; 
			turn rturret to x-axis <2.660585> speed <64.519687> / animSpeed; 
			turn rturret to z-axis <-6.0> speed <180.0> / animSpeed; 
			turn torso to x-axis <2.833146> speed <237.426607> / animSpeed; 
			turn torso to z-axis <-2.797720> speed <83.931606> / animSpeed; 
			turn torso to y-axis <0.321296> speed <9.638873> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) {
			turn lankle to x-axis <-24.522093> speed <39.055380> / animSpeed; 
			turn lankle to z-axis <-1.201320> speed <65.249513> / animSpeed; 
			turn lankle to y-axis <-0.880721> speed <61.059343> / animSpeed; 
			turn lfoot to x-axis <29.513927> speed <708.607162> / animSpeed; 
			turn lleg to x-axis <-34.419239> speed <482.275884> / animSpeed; 
			turn lleg to z-axis <-2.620238> speed <125.889827> / animSpeed; 
			turn lleg to y-axis <-0.605163> speed <38.587621> / animSpeed; 
			turn lthigh to x-axis <22.761107> speed <758.563268> / animSpeed; 
			turn lthigh to z-axis <-1.222193> speed <100.816429> / animSpeed; 
			turn lthigh to y-axis <1.642701> speed <127.093132> / animSpeed; 
			turn ltoe1 to x-axis <15.678581> speed <293.546794> / animSpeed; 
			turn lturret to x-axis <3.696669> speed <200.333070> / animSpeed; 
			turn lturret to z-axis <4.004882> speed <59.853537> / animSpeed; 
			move pelvis to z-axis [-0.064874] speed [40.870453] / animSpeed; 
			move pelvis to y-axis [-0.648737] speed [21.408330] / animSpeed; 
			turn rankle to x-axis <-12.751128> speed <299.925214> / animSpeed; 
			turn rankle to z-axis <-1.041110> speed <40.067557> / animSpeed; 
			turn rankle to y-axis <-0.363951> speed <28.042008> / animSpeed; 
			turn rfoot to x-axis <11.537478> speed <36.307006> / animSpeed; 
			turn rfoot to z-axis <5.216160> speed <79.676125> / animSpeed; 
			turn rfoot to y-axis <0.950731> speed <14.662664> / animSpeed; 
			turn rleg to x-axis <-1.541724> speed <1013.224543> / animSpeed; 
			turn rleg to z-axis <-2.076624> speed <78.687751> / animSpeed; 
			turn rleg to y-axis <2.791716> speed <69.620122> / animSpeed; 
			turn rthigh to x-axis <0.946895> speed <1312.376039> / animSpeed; 
			turn rthigh to z-axis <-3.197275> speed <46.982361> / animSpeed; 
			turn rthigh to y-axis <1.806757> speed <112.184884> / animSpeed; 
			turn rtoe1 to x-axis <0.970474> speed <29.114215> / animSpeed; 
			turn rturret to x-axis <-3.096177> speed <172.702846> / animSpeed; 
			turn rturret to z-axis <-3.990750> speed <60.277512> / animSpeed; 
			turn rturret to y-axis <-0.131441> speed <3.943257> / animSpeed; 
			turn torso to x-axis <-0.465307> speed <98.953580> / animSpeed; 
			turn torso to z-axis <-1.398860> speed <41.965800> / animSpeed; 
			turn torso to y-axis <0.160648> speed <4.819437> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) {
			turn lankle to x-axis <9.694950> speed <1026.511299> / animSpeed; 
			turn lankle to z-axis <-0.373805> speed <24.825474> / animSpeed; 
			turn lankle to y-axis <-0.324764> speed <16.678711> / animSpeed; 
			turn lfoot to x-axis <-2.663796> speed <965.331702> / animSpeed; 
			turn lleg to x-axis <2.015531> speed <1093.043096> / animSpeed; 
			turn lleg to z-axis <-0.042693> speed <77.326346> / animSpeed; 
			turn lleg to y-axis <-1.207607> speed <18.073324> / animSpeed; 
			turn lthigh to x-axis <-33.656949> speed <1692.541674> / animSpeed; 
			turn lthigh to z-axis <1.269127> speed <74.739592> / animSpeed; 
			turn lthigh to y-axis <0.280342> speed <40.870769> / animSpeed; 
			turn ltoe1 to x-axis <-26.588330> speed <1268.007339> / animSpeed; 
			turn lturret to x-axis <8.566328> speed <146.089781> / animSpeed; 
			turn lturret to z-axis <2.015462> speed <59.682607> / animSpeed; 
			move pelvis to z-axis [-1.167727] speed [33.085606] / animSpeed; 
			move pelvis to y-axis [1.037980] speed [50.601507] / animSpeed; 
			turn rankle to x-axis <-6.566497> speed <185.538938> / animSpeed; 
			turn rankle to z-axis <-0.635354> speed <12.172662> / animSpeed; 
			turn rankle to y-axis <-0.049512> speed <9.433175> / animSpeed; 
			turn rfoot to x-axis <-10.227991> speed <652.964053> / animSpeed; 
			turn rfoot to z-axis <7.045505> speed <54.880335> / animSpeed; 
			turn rfoot to y-axis <-1.496729> speed <73.423790> / animSpeed; 
			turn rleg to x-axis <0.975974> speed <75.530931> / animSpeed; 
			turn rleg to z-axis <-2.847499> speed <23.126269> / animSpeed; 
			turn rleg to y-axis <2.126783> speed <19.947984> / animSpeed; 
			turn rthigh to x-axis <19.835078> speed <566.645475> / animSpeed; 
			turn rthigh to z-axis <-3.589988> speed <11.781398> / animSpeed; 
			turn rthigh to y-axis <2.578970> speed <23.166373> / animSpeed; 
			turn rtoe1 to x-axis <-4.642261> speed <168.382045> / animSpeed; 
			turn rtoe1 to z-axis <0.351543> speed <11.014897> / animSpeed; 
			turn rturret to x-axis <-4.337379> speed <37.236068> / animSpeed; 
			turn rturret to z-axis <-1.985734> speed <60.150458> / animSpeed; 
			turn torso to x-axis <-3.763759> speed <98.953561> / animSpeed; 
			turn torso to z-axis <-0.0> speed <41.965806> / animSpeed; 
			turn torso to y-axis <0.0> speed <4.819436> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
	}
}
// Call this from StopMoving()!
StopWalking() {
	move pelvis to y-axis [0] speed [8.433585];
	move pelvis to z-axis [0] speed [6.811742];
	turn lankle to x-axis <0> speed <231.353064>;
	turn lankle to y-axis <0> speed <10.176557>;
	turn lankle to z-axis <0> speed <10.874919>;
	turn lfoot to x-axis <0> speed <160.888617>;
	turn lfoot to y-axis <0> speed <12.237298>;
	turn lfoot to z-axis <0> speed <21.073318>;
	turn lleg to x-axis <0> speed <393.202909>;
	turn lleg to y-axis <0> speed <17.152927>;
	turn lleg to z-axis <0> speed <20.981638>;
	turn lthigh to x-axis <0> speed <282.090279>;
	turn lthigh to y-axis <0> speed <59.483811>;
	turn lthigh to z-axis <0> speed <53.946126>;
	turn ltoe1 to x-axis <0> speed <211.334557>;
	turn ltoe1 to y-axis <0> speed <5.115917>;
	turn ltoe1 to z-axis <0> speed <8.427208>;
	turn lturret to x-axis <0> speed <42.831642>;
	turn lturret to y-axis <0> speed <0.663697>;
	turn lturret to z-axis <0> speed <30.0>;
	turn rankle to x-axis <0> speed <201.668592>;
	turn rankle to y-axis <0> speed <10.319140>;
	turn rankle to z-axis <0> speed <11.019799>;
	turn rfoot to x-axis <0> speed <160.888617>;
	turn rfoot to y-axis <0> speed <12.237298>;
	turn rfoot to z-axis <0> speed <35.227525>;
	turn rleg to x-axis <0> speed <402.899140>;
	turn rleg to y-axis <0> speed <16.504590>;
	turn rleg to z-axis <0> speed <21.069011>;
	turn rthigh to x-axis <0> speed <283.261272>;
	turn rthigh to y-axis <0> speed <67.621590>;
	turn rthigh to z-axis <0> speed <60.929763>;
	turn rtoe1 to x-axis <0> speed <211.334557>;
	turn rtoe1 to z-axis <0> speed <1.835816>;
	turn rturret to x-axis <0> speed <33.388845>;
	turn rturret to y-axis <0> speed <0.663697>;
	turn rturret to z-axis <0> speed <30.0>;
	turn torso to x-axis <0> speed <39.687330>;
	turn torso to y-axis <0> speed <1.606479>;
	turn torso to z-axis <0> speed <13.988601>;
}

static-var bAnimate;
Animate() {//Created by https://github.com/Beherith/Skeletor_S3O from N:\animations\corshiva_anim_death_v1.blend 
		if (bAnimate) {
			move lankle to z-axis [0.902645] speed [3.868478] ; 
			move lankle to y-axis [1.224814] speed [5.249201] ; 
			turn lankle to x-axis <14.719044> speed <68.453426> ; 
			turn lleg to x-axis <-34.659262> speed <148.539695> ; 
			turn lleg to y-axis <0.227802> speed <0.976296> ; 
			turn lthigh to x-axis <30.957487> speed <132.674946> ; 
			turn lthigh to z-axis <0.173840> speed <0.745030> ; 
			turn lthigh to y-axis <-0.298919> speed <1.281081> ; 
			turn lturret to x-axis <-6.013723> speed <25.773100> ; 
			move pelvis to z-axis [-2.098165] speed [8.992134] ; 
			move pelvis to y-axis [-7.973025] speed [34.170109] ; 
			turn pelvis to x-axis <-16.135753> speed <69.153228> ; 
			move rankle to z-axis [0.894512] speed [3.833624] ; 
			move rankle to y-axis [1.224886] speed [5.249512] ; 
			turn rankle to x-axis <14.594736> speed <67.962571> ; 
			turn rleg to x-axis <-34.733643> speed <148.858470> ; 
			turn rleg to y-axis <-0.229656> speed <0.984241> ; 
			turn rthigh to x-axis <31.111303> speed <133.334157> ; 
			turn rthigh to z-axis <-0.175825> speed <0.753537> ; 
			turn rthigh to y-axis <0.302243> speed <1.295327> ; 
			turn rturret to x-axis <-6.013723> speed <25.773100> ; 
		sleep 230;
		}
		if (bAnimate) {
			move lankle to z-axis [1.805290] speed [3.868478] ; 
			move lankle to y-axis [2.449627] speed [5.249201] ; 
			turn lankle to x-axis <59.926215> speed <193.745019> ; 
			turn lleg to x-axis <-46.569613> speed <51.044360> ; 
			turn lleg to z-axis <0.282024> speed <1.006385> ; 
			turn lleg to y-axis <0.360563> speed <0.568976> ; 
			turn lthigh to x-axis <22.616006> speed <35.749205> ; 
			turn lturret to x-axis <-0.392973> speed <24.088930> ; 
			turn lturret to z-axis <8.443136> speed <36.184868> ; 
			turn lturret to y-axis <5.320018> speed <22.800078> ; 
			move pelvis to z-axis [-4.196329] speed [8.992134] ; 
			move pelvis to y-axis [-15.946051] speed [34.170109] ; 
			turn pelvis to x-axis <-32.271507> speed <69.153228> ; 
			move rankle to z-axis [1.789024] speed [3.833624] ; 
			move rankle to y-axis [2.449772] speed [5.249512] ; 
			turn rankle to x-axis <59.985078> speed <194.530035> ; 
			turn rleg to x-axis <-46.654755> speed <51.090478> ; 
			turn rleg to z-axis <-0.285135> speed <1.016134> ; 
			turn rleg to y-axis <-0.363469> speed <0.573484> ; 
			turn rthigh to x-axis <22.697367> speed <36.059725> ; 
			turn rthigh to z-axis <-0.074819> speed <0.432882> ; 
			turn rturret to x-axis <-0.392973> speed <24.088930> ; 
			turn rturret to z-axis <-8.443136> speed <36.184868> ; 
			turn rturret to y-axis <-5.320018> speed <22.800078> ; 
		sleep 230;
		}
		if (bAnimate) {
			turn lankle to x-axis <56.847333> speed <9.236646> ; 
			turn lankle to z-axis <-0.199874> speed <0.627350> ; 
			turn lankle to y-axis <1.364711> speed <3.881026> ; 
			turn lleg to x-axis <-39.226196> speed <22.030249> ; 
			turn lleg to z-axis <-1.065266> speed <4.041869> ; 
			turn lleg to y-axis <-1.791247> speed <6.455432> ; 
			turn lthigh to x-axis <4.515302> speed <54.302113> ; 
			turn lthigh to z-axis <0.604679> speed <1.590455> ; 
			turn lthigh to y-axis <-0.570866> speed <0.816889> ; 
			turn lturret to x-axis <0.0> speed <1.178919> ; 
			turn lturret to z-axis <-0.0> speed <25.329407> ; 
			turn lturret to y-axis <0.0> speed <15.960054> ; 
			turn pelvis to x-axis <-15.480665> speed <50.372526> ; 
			turn pelvis to z-axis <-2.231866> speed <6.695597> ; 
			turn pelvis to y-axis <1.700530> speed <5.101591> ; 
			turn rankle to x-axis <57.371670> speed <7.840224> ; 
			turn rankle to z-axis <-0.413880> speed <1.213843> ; 
			turn rankle to y-axis <1.469695> speed <4.624172> ; 
			turn rleg to x-axis <-44.441346> speed <6.640225> ; 
			turn rleg to z-axis <-1.609562> speed <3.973282> ; 
			turn rleg to y-axis <-2.600198> speed <6.710186> ; 
			turn rthigh to x-axis <8.890320> speed <41.421142> ; 
			turn rthigh to z-axis <0.452878> speed <1.583093> ; 
			turn rthigh to y-axis <-0.154546> speed <1.366826> ; 
			turn rturret to x-axis <0.0> speed <1.178919> ; 
			turn rturret to z-axis <-0.0> speed <25.329407> ; 
			turn rturret to y-axis <0.0> speed <15.960054> ; 
		sleep 329;
		}
		if (bAnimate) {
			turn torso to x-axis <7.014775> speed <42.088648> ; 
			turn torso to z-axis <-0.152166> speed <0.912995> ; 
			turn torso to y-axis <-0.273173> speed <1.639040> ; 
		sleep 164;
		}
}

StopAnimation() {
	move lankle to y-axis [0] speed [5.249201];
	move lankle to z-axis [0] speed [3.868478];
	move pelvis to y-axis [0] speed [34.170109];
	move pelvis to z-axis [0] speed [8.992134];
	move rankle to y-axis [0] speed [5.249512];
	move rankle to z-axis [0] speed [3.833624];
	turn lankle to x-axis <0> speed <193.745019>;
	turn lankle to y-axis <0> speed <3.881026>;
	turn lankle to z-axis <0> speed <0.627350>;
	turn lleg to x-axis <0> speed <148.539695>;
	turn lleg to y-axis <0> speed <6.455432>;
	turn lleg to z-axis <0> speed <4.041869>;
	turn lthigh to x-axis <0> speed <132.674946>;
	turn lthigh to y-axis <0> speed <1.281081>;
	turn lthigh to z-axis <0> speed <1.590455>;
	turn lturret to x-axis <0> speed <25.773100>;
	turn lturret to y-axis <0> speed <22.800078>;
	turn lturret to z-axis <0> speed <36.184868>;
	turn pelvis to x-axis <0> speed <69.153228>;
	turn pelvis to y-axis <0> speed <5.101591>;
	turn pelvis to z-axis <0> speed <6.695597>;
	turn rankle to x-axis <0> speed <194.530035>;
	turn rankle to y-axis <0> speed <4.624172>;
	turn rankle to z-axis <0> speed <1.213843>;
	turn rleg to x-axis <0> speed <148.858470>;
	turn rleg to y-axis <0> speed <6.710186>;
	turn rleg to z-axis <0> speed <3.973282>;
	turn rthigh to x-axis <0> speed <133.334157>;
	turn rthigh to y-axis <0> speed <1.366826>;
	turn rthigh to z-axis <0> speed <1.583093>;
	turn rturret to x-axis <0> speed <25.773100>;
	turn rturret to y-axis <0> speed <22.800078>;
	turn rturret to z-axis <0> speed <36.184868>;
	turn torso to x-axis <0> speed <42.088648>;
	turn torso to y-axis <0> speed <1.639040>;
	turn torso to z-axis <0> speed <0.912995>;
}
Movement(moving, aiming, justmoved)
{
	justmoved = TRUE;
	
	while( TRUE )
	{	
		//get PRINT(isMoving, isAiming, justmoved);
		moving = isMoving;
		aiming = isAiming;
		if( moving )
		{
			signal SIGNAL_MOVE;
			if( aiming )
			{
				call-script walk();
			}
			else
			{
				call-script walk();
			}
			justmoved = TRUE;
		}
		else
		{	

			if( justmoved )
			{
				justmoved = FALSE; //just cleared the animations from here, not sure what you will do with this 
				call-script StopWalking();
			}
			
			sleep 100;
			if (RAND(1,200) ==1){ //this is bad place and thread to do this, just showing off...
				if (!isAiming){
					bAnimate = TRUE;
					start-script Animate();
					sleep 2000;
					call-script StopAnimation() ;
				}
				
			}
		}
	}
}

UnitSpeed(){
 maxSpeed = get MAX_SPEED; // this returns cob units per frame i think
 maxSpeed = maxSpeed + (maxSpeed /(2*animFramesPerKeyframe)); // add '
 animFramesPerKeyframe = 6; //we need to calc the frames per keyframe value, from the known animtime
 while(TRUE){
  curSpeed = get CURRENT_SPEED;
  if (curSpeed < 1) curSpeed = 1;
  
  animSpeed = (maxSpeed * 6) / curSpeed; 
  //get PRINT(maxSpeed, animFramesPerKeyframe, animSpeed,curSpeed);  
  if (animSpeed<3) animSpeed=3;
  if (animspeed>12) animSpeed = 12;
  sleep 197;
 }
}

#define BASEPIECE pelvis
#define HITSPEED <45.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 10
#define MAXTILT 100

#include "../unit_hitbyweaponid_and_smoke.h"

Create()
{
	hide lwake;
	hide rwake;
	hide rocketflare;
	hide lflare;
	hide rflare;
	hide aimx1;
	hide aimy1;
	isMoving = FALSE;
	isAiming = FALSE;
	doorOpen = FALSE;
	gun_left = TRUE;
	animFramesPerKeyframe = 6;
	animSpeed = 6;
	
	call-script CATT1_Init();
	hide lflare;
	hide rflare;
	//turn lflare to x-axis <105> now;
	//turn lflare to y-axis <20> now;
	//turn rflare to x-axis <105> now;
	//turn rflare to y-axis <20> now;
	restore_delay = 5000;
	set ARMORED to 1;
}

SetMaxReloadTime(maxtime_ms) //this is called by engine immediately after Create(), and returns the longest of all weapon reload times in ms
{
	//restore_delay = maxtime_ms;
}

StartMoving(reversing)
{
	signal SIGNAL_MOVE;
	isMoving=TRUE;
	set-signal-mask SIGNAL_MOVE;
	start-script UnitSpeed();
	start-script Walk();
	set ARMORED to 0;
}

StopMoving()
{
	isMoving = FALSE;
	signal SIGNAL_MOVE;
	call-script StopWalking();
	set ARMORED to 1;
}


//-------------------------------CONSTANT ACCELERATION TURRET TURNING---------------------------
// MaxVelocity and acceleration are in degrees per frame (not second!)
// Jerk is the minimum velocity of the turret
// A high precision requirement can result in overshoots if desired 
// Author Beherith mysterme@gmail.com. License: GNU GPL v2.


#define CATT1_PIECE_X aimx1
#define CATT1_PIECE_Y aimy1

#define CATT1_MAX_VELOCITY <7.0>
#define CATT1_ACCELERATION <0.5>
#define CATT1_JERK <1.0>
#define CATT1_PRECISION <1.2>
#define CATT1_RESTORE_SPEED <3.0>
#define CATT1_PITCH_SPEED <85>

#include "../constant_acceleration_turret_turning_1.h"


RestoreAfterDelay()
{
	sleep restore_delay;
	turn rdoor to z-axis <0> speed <100>;
	turn ldoor to z-axis <0> speed <100>;
	isAiming = FALSE;
	doorOpen = FALSE;
}

AimWeapon1(heading, pitch)
{

	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	isAiming = TRUE;
	call-script CATT1_Aim(heading,pitch);
	return (1);
}

AimWeapon2(heading, pitch)
{
	
	signal SIGNAL_AIM3;
	set-signal-mask SIGNAL_AIM3;
	
	if (!doorOpen){
		turn rdoor to z-axis <-115> speed <100>;
		turn ldoor to z-axis <115> speed <100>;
		wait-for-turn rdoor around z-axis;
		wait-for-turn ldoor around z-axis;
		doorOpen = TRUE;
	}
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon1()
{
	if( gun_left )
	{
		move lrecoil to z-axis [-3.0] speed [70.0];
		emit-sfx 1024 + 0 from lflare;
		turn lturret to y-axis <5> now;
		turn aimy1 to x-axis <-1> now;
		sleep 150;
		
		turn aimy1 to x-axis <0> speed <3>;	
		turn lturret to y-axis <0> speed <8>;
		move lrecoil to z-axis [0.0] speed [3.0];
	}
	else
	{
		move rrecoil to z-axis [-3.0] speed [70.0];
		emit-sfx 1024 + 0 from rflare;
		turn rturret to y-axis <-5> now;
		turn aimy1 to x-axis <-1> now;
		sleep 150;
		
		turn aimy1 to x-axis <0> speed <3>;	
		turn rturret to y-axis <0> speed <8>;
		move rrecoil to z-axis [0.0] speed [3.0];
	}
	gun_left = !gun_left;
}


FireWeapon2()
{
	turn aimy1 to x-axis <-2> now;
	turn rdoor to z-axis <-125> now; 
	turn ldoor to z-axis <125> now;
	sleep 150;
	turn aimy1 to x-axis <0> speed <3>;
	turn rdoor to z-axis <-115> speed <15>;
	turn ldoor to z-axis <115> speed <15>;

}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = lflare + gun_left;
}

AimFromWeapon2(pieceIndex) //not needed?
{
	pieceIndex = rlauncher;
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = lflare + gun_left;
}


QueryWeapon2(pieceIndex)
{
	pieceIndex = rocketflare; // not sure what should go here 
}




Killed(severity, corpsetype)
{
		if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode pelvis type BITMAPONLY | NOHEATCLOUD;
		explode rthigh type BITMAPONLY | NOHEATCLOUD;
		explode rleg type BITMAPONLY | NOHEATCLOUD;
		explode rfoot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		
		
		explode lfoot type BITMAPONLY | NOHEATCLOUD;
		explode torso type BITMAPONLY | NOHEATCLOUD;
		
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode pelvis type BITMAPONLY | NOHEATCLOUD;
		explode rthigh type FALL | NOHEATCLOUD;
		explode rleg type FALL | NOHEATCLOUD;
		explode rfoot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		
		explode lleg type FALL | NOHEATCLOUD;
		explode lfoot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode pelvis type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rthigh type SMOKE | FALL | NOHEATCLOUD;
		explode rleg type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rfoot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lthigh type SMOKE | FALL | NOHEATCLOUD;
		
		explode lfoot type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode torso type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode pelvis type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rthigh type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode rleg type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode rfoot type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		
		explode lleg type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lfoot type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode torso type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}

