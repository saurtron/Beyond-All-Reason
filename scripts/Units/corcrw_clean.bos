
#include "../recoil_common_includes.h"

piece  base, turretl, sleevel, barrell, flarel, turretr, sleever, barrelr, flarer, 
       turretf, sleevef, barrelf, flaref, thrustrr, thrustrl, thrustfr, thrustfl, 
       thrustrra, thrustrla, thrustfra, thrustfla;
       

static-var  restore_delay, v1;

// Signal definitions
#define SIGNAL_AIM1 256
#define SIGNAL_AIM2 512
#define SIGNAL_AIM3 1024

#define BASEPIECE base
#define HITSPEED <55.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 5
#define MAXTILT 100

#define IDLEHOVERSCALE 32
#define IDLEHOVERSPEED 60
#define IDLEBASEPIECE base
#include "../idlehover.h"

Create()
{
	hide thrustrra;
	hide thrustfra;
	hide thrustrla;
	hide thrustfla;
	hide flaref;
	hide flarel;
	hide flarer;
	
	turn thrustrra to x-axis <-90> now; 
	turn thrustfra to x-axis <-90> now; 
	turn thrustrla to x-axis <-90> now; 
	turn thrustfla to x-axis <-90> now; 
	SLEEP_UNTIL_UNITFINISHED;
	start-script IdleHover();
}

Activate()
{
	show thrustrra;
	show thrustfra;
	show thrustrla;
	show thrustfla;
}

Deactivate()
{
	hide thrustrra;
	hide thrustfra;
	hide thrustrla;
	hide thrustfla;
}



QueryWeapon1(pieceIndex)
{
	pieceIndex = flaref;
}

QueryWeapon2(pieceIndex)
{
	pieceIndex = flarel;
}

QueryWeapon3(pieceIndex)
{
	pieceIndex = flarer;
}

SetMaxReloadTime(reloadMS)
{
	restore_delay = reloadMS * 2;
}

static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	turn base to y-axis <0.0> speed <250.0>;
	turn base to x-axis <0.0> speed <250.0>;
	turn turretf to z-axis <0> speed <250>;
	turn sleevef to x-axis <0> speed <250>;

	turn turretl to x-axis <0> speed <250>;
	turn sleevel to y-axis <0> speed <250>;

	turn turretr to x-axis <0> speed <250>;
	turn sleever to y-axis <0> speed <250>;
}
SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}
RestoreAfterDelay()
{
	sleep restore_delay;
	start-script ExecuteRestoreAfterDelay();
}

StartMoving(reversing)
{
	sleep 1000;
}

StopMoving()
{
}

MoveRate0()
{
	turn thrustrr to x-axis <0.0> speed <80.0>;
	turn thrustrl to x-axis <0.0> speed <80.0>;
	turn thrustfr to x-axis <0.0> speed <80.0>;
	turn thrustfl to x-axis <0.0> speed <80.0>;
}

MoveRate1()
{
	turn thrustrr to x-axis <8.0> speed <60.0>;
	turn thrustrl to x-axis <8.0> speed <60.0>;
	turn thrustfr to x-axis <8.0> speed <60.0>;
	turn thrustfl to x-axis <8.0> speed <60.0>;
}

MoveRate2()
{
	turn thrustrr to x-axis <18.0> speed <45.0>;
	turn thrustrl to x-axis <18.0> speed <45.0>;
	turn thrustfr to x-axis <18.0> speed <45.0>;
	turn thrustfl to x-axis <18.0> speed <45.0>;
}

MoveRate3()
{
	turn thrustrr to x-axis <0.0> speed <70.0>;
	turn thrustrl to x-axis <0.0> speed <70.0>;
	turn thrustfr to x-axis <0.0> speed <70.0>;
	turn thrustfl to x-axis <0.0> speed <70.0>;
}

AimWeapon1(heading, pitch)
{
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	
	
	var p;
	var h;
	var a;
	p = get KTAN(pitch);
	h = get KTAN(heading);
	a = get ATAN(h, p);
	turn turretf to z-axis a speed <200.0>;

	a = get HYPOT(h, p);
	a = get ATAN(a, 1000);
	turn sleevef to x-axis <0> - a speed <200.0>;
	wait-for-turn turretf around z-axis;
	wait-for-turn sleevef around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimWeapon2(heading, pitch)
{
	signal SIGNAL_AIM2;
	set-signal-mask SIGNAL_AIM2;
	var aimto;
	aimto= <-90> + heading;
	if (aimto > <90>) {
		aimto = <90>;
	}
	if (aimto < <-90>) {
		aimto = <-90>;
	}
	//turn turretl to x-axis  speed <200.0>;
	turn sleevel to y-axis aimto speed <200.0>;
	wait-for-turn sleevel around y-axis;
	return (1);
}

AimWeapon3(heading, pitch)
{
	signal SIGNAL_AIM3;
	set-signal-mask SIGNAL_AIM3;
	var aimto;
	aimto= <90> + heading;
	if (aimto > <90>) {
		aimto = <90>;
	}
	if (aimto < <-90>) {
		aimto = <-90>;
	}
	//turn turretr to x-axis heading speed <200.0>;
	turn sleever to y-axis aimto speed <200.0>;
	wait-for-turn sleever around y-axis;
	return (1);
}

FireWeapon1()
{
	sleep 100;
}

FireWeapon2()
{
	sleep 100;
}

FireWeapon3()
{
	sleep 100;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turretf type BITMAPONLY | NOHEATCLOUD;
		explode sleevef type BITMAPONLY | NOHEATCLOUD;
		explode barrelf type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flaref type BITMAPONLY | NOHEATCLOUD;
		explode turretr type BITMAPONLY | NOHEATCLOUD;
		explode sleever type BITMAPONLY | NOHEATCLOUD;
		explode barrelr type BITMAPONLY | NOHEATCLOUD;
		explode flarer type BITMAPONLY | NOHEATCLOUD;
		explode turretl type BITMAPONLY | NOHEATCLOUD;
		explode sleevel type BITMAPONLY | NOHEATCLOUD;
		explode barrell type BITMAPONLY | NOHEATCLOUD;
		explode flarel type BITMAPONLY | NOHEATCLOUD;
		explode thrustrl type BITMAPONLY | NOHEATCLOUD;
		explode thrustrla type BITMAPONLY | NOHEATCLOUD;
		explode thrustfl type BITMAPONLY | NOHEATCLOUD;
		explode thrustfla type BITMAPONLY | NOHEATCLOUD;
		explode thrustfr type BITMAPONLY | NOHEATCLOUD;
		explode thrustfra type BITMAPONLY | NOHEATCLOUD;
		explode thrustrr type BITMAPONLY | NOHEATCLOUD;
		explode thrustrra type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turretf type BITMAPONLY | NOHEATCLOUD;
		explode sleevef type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrelf type FALL | NOHEATCLOUD;
		explode flaref type BITMAPONLY | NOHEATCLOUD;
		explode turretr type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode sleever type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrelr type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flarer type BITMAPONLY | NOHEATCLOUD;
		explode turretl type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode sleevel type FALL | NOHEATCLOUD;
		explode barrell type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flarel type BITMAPONLY | NOHEATCLOUD;
		explode thrustrl type BITMAPONLY | NOHEATCLOUD;
		explode thrustrla type BITMAPONLY | NOHEATCLOUD;
		explode thrustfl type BITMAPONLY | NOHEATCLOUD;
		explode thrustfla type BITMAPONLY | NOHEATCLOUD;
		explode thrustfr type BITMAPONLY | NOHEATCLOUD;
		explode thrustfra type BITMAPONLY | NOHEATCLOUD;
		explode thrustrr type BITMAPONLY | NOHEATCLOUD;
		explode thrustrra type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turretf type BITMAPONLY | NOHEATCLOUD;
		explode sleevef type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrelf type SMOKE | FALL | NOHEATCLOUD;
		explode flaref type BITMAPONLY | NOHEATCLOUD;
		explode turretr type SMOKE | FALL | NOHEATCLOUD;
		explode sleever type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrelr type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flarer type BITMAPONLY | NOHEATCLOUD;
		explode turretl type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode sleevel type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrell type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode flarel type BITMAPONLY | NOHEATCLOUD;
		explode thrustrl type BITMAPONLY | NOHEATCLOUD;
		explode thrustrla type BITMAPONLY | NOHEATCLOUD;
		explode thrustfl type BITMAPONLY | NOHEATCLOUD;
		explode thrustfla type BITMAPONLY | NOHEATCLOUD;
		explode thrustfr type BITMAPONLY | NOHEATCLOUD;
		explode thrustfra type BITMAPONLY | NOHEATCLOUD;
		explode thrustrr type BITMAPONLY | NOHEATCLOUD;
		explode thrustrra type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turretf type BITMAPONLY | NOHEATCLOUD;
		explode sleevef type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrelf type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode flaref type BITMAPONLY | NOHEATCLOUD;
		explode turretr type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode sleever type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrelr type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode flarer type BITMAPONLY | NOHEATCLOUD;
		explode turretl type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode sleevel type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode barrell type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode flarel type BITMAPONLY | NOHEATCLOUD;
		explode thrustrl type BITMAPONLY | NOHEATCLOUD;
		explode thrustrla type BITMAPONLY | NOHEATCLOUD;
		explode thrustfl type BITMAPONLY | NOHEATCLOUD;
		explode thrustfla type BITMAPONLY | NOHEATCLOUD;
		explode thrustfr type BITMAPONLY | NOHEATCLOUD;
		explode thrustfra type BITMAPONLY | NOHEATCLOUD;
		explode thrustrr type BITMAPONLY | NOHEATCLOUD;
		explode thrustrra type BITMAPONLY | NOHEATCLOUD;
	return corpsetype;
}
