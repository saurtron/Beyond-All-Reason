
#include "../recoil_common_includes.h"

piece  lflare, rflare, torso, turret, Rbarrel, Lbarrel, rfleg, rffoot, lfleg, lffoot, rbleg, rbfoot, lbleg, lbfoot, aimy1;

static-var  isMoving, isAiming,  restore_delay, gun_1;

// Signal definitions
#define SIGNAL_AIM1 256

lua_UnitScriptDecal(lightIndex, xpos,zpos, heading) 
{
	return 0;
}


// Generated for N:\animations\corsumo_anim_walk.blend
// Using https://github.com/Beherith/Skeletor_S3O 
// this animation uses the static-var animFramesPerKeyframe which contains how many frames each keyframe takes
// Author Beherith mysterme@gmail.com. License: GNU GPL v2.

static-var animSpeed, maxSpeed, animFramesPerKeyframe;
#define SIGNAL_MOVE 1
Walk() {//Created by https://github.com/Beherith/Skeletor_S3O from N:\animations\corsumo_anim_walk.blend 
	set-signal-mask SIGNAL_MOVE;
	if (isMoving) { //Frame:6
			turn lbfoot to x-axis <-14.338065> speed <430.141938> / animSpeed; //delta=14.34 
			move lbleg to y-axis [-2.334006] speed [70.020182] / animSpeed; //delta=-2.33 
			turn lbleg to x-axis <19.481701> speed <584.451023> / animSpeed; //delta=-19.48 
			turn lbleg to y-axis <-0.0> speed <170.999984> / animSpeed; //delta=5.70 
			turn lffoot to x-axis <-19.354488> speed <580.634655> / animSpeed; //delta=19.35 
			move lfleg to y-axis [1.006599] speed [30.197968] / animSpeed; //delta=1.01 
			turn lfleg to x-axis <21.784940> speed <653.548188> / animSpeed; //delta=-21.78 
			turn lfleg to y-axis <-0.0> speed <149.999983> / animSpeed; //delta=-5.00 
			turn rbfoot to x-axis <19.443259> speed <583.297762> / animSpeed; //delta=-19.44 
			move rbleg to y-axis [1.788061] speed [53.641845] / animSpeed; //delta=1.79 
			turn rbleg to x-axis <-22.741834> speed <682.255012> / animSpeed; //delta=22.74 
			turn rbleg to y-axis <0.0> speed <167.999986> / animSpeed; //delta=-5.60 
			turn rffoot to x-axis <25.808623> speed <774.258684> / animSpeed; //delta=-25.81 
			move rfleg to y-axis [-4.251511] speed [127.545333] / animSpeed; //delta=-4.25 
			turn rfleg to x-axis <-26.768777> speed <803.063299> / animSpeed; //delta=26.77 
			turn rfleg to y-axis <-0.0> speed <164.999988> / animSpeed; //delta=5.50 
			move torso to y-axis [0.842832] speed [25.284952] / animSpeed; //delta=0.84 
			turn turret to y-axis <-2.0> speed <60.0> / animSpeed; //delta=-2.00 
		sleep ((33*animSpeed) -1);
	}
	while(isMoving) {
		if (isMoving) { //Frame:12
			//call-script lua_UnitScriptDecal(1, (get PIECE_XZ(lbfoot) & 0xffff0000) / 0x00010000 , (get PIECE_XZ(lbfoot) & 0x0000ffff),   get HEADING(0));
			turn lbfoot to x-axis <-18.276130> speed <118.141953> / animSpeed; //delta=3.94 
			move lbleg to y-axis [-3.471509] speed [34.125080] / animSpeed; //delta=-1.14 
			turn lbleg to x-axis <38.963402> speed <584.451023> / animSpeed; //delta=-19.48 
			turn lffoot to x-axis <4.325368> speed <710.395694> / animSpeed; //delta=-23.68 
			move lfleg to y-axis [0.482331] speed [15.728052] / animSpeed; //delta=-0.52 
			turn lfleg to x-axis <-3.120163> speed <747.153070> / animSpeed; //delta=24.91 
			turn rbfoot to x-axis <44.038608> speed <737.860470> / animSpeed; //delta=-24.60 
			move rbleg to y-axis [0.092369] speed [50.870780] / animSpeed; //delta=-1.70 
			turn rbleg to x-axis <-45.483671> speed <682.255114> / animSpeed; //delta=22.74 
			turn rffoot to x-axis <-0.0> speed <774.258684> / animSpeed; //delta=25.81 
			move rfleg to y-axis [-1.053504] speed [95.940206] / animSpeed; //delta=3.20 
			turn rfleg to x-axis <-0.0> speed <803.063299> / animSpeed; //delta=-26.77 
			move torso to y-axis [1.0] speed [4.715048] / animSpeed; //delta=0.16 
			turn torso to x-axis <0.367080> speed <11.012392> / animSpeed; //delta=-0.37 
			turn torso to z-axis <0.380266> speed <11.407970> / animSpeed; //delta=-0.38 
			turn turret to y-axis <0.0> speed <60.0> / animSpeed; //delta=2.00 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:18
			turn lbfoot to x-axis <-19.997443> speed <51.639406> / animSpeed; //delta=1.72 
			move lbleg to y-axis [-1.013877] speed [73.728948] / animSpeed; //delta=2.46 
			turn lbleg to x-axis <19.481701> speed <584.451023> / animSpeed; //delta=19.48 
			turn lffoot to x-axis <7.569844> speed <97.334281> / animSpeed; //delta=-3.24 
			move lfleg to y-axis [-1.739398] speed [66.651871] / animSpeed; //delta=-2.22 
			turn lfleg to x-axis <-20.244433> speed <513.728111> / animSpeed; //delta=17.12 
			turn rbfoot to x-axis <18.619304> speed <762.579112> / animSpeed; //delta=25.42 
			move rbleg to y-axis [0.400301] speed [9.237975] / animSpeed; //delta=0.31 
			turn rbleg to x-axis <-19.297236> speed <785.593042> / animSpeed; //delta=-26.19 
			turn rffoot to x-axis <-23.512202> speed <705.366067> / animSpeed; //delta=23.51 
			move rfleg to y-axis [0.933998] speed [59.625063] / animSpeed; //delta=1.99 
			turn rfleg to x-axis <24.115777> speed <723.473325> / animSpeed; //delta=-24.12 
			move torso to y-axis [0.856374] speed [4.308779] / animSpeed; //delta=-0.14 
			turn torso to x-axis <-0.0> speed <11.012392> / animSpeed; //delta=0.37 
			turn torso to z-axis <0.630797> speed <7.515927> / animSpeed; //delta=-0.25 
			turn turret to y-axis <2.0> speed <60.0> / animSpeed; //delta=2.00 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:24
			call-script lua_UnitScriptDecal(1, (get PIECE_XZ(rffoot) & 0xffff0000) / 0x00010000 , (get PIECE_XZ(rffoot) & 0x0000ffff),   get HEADING(0));
			turn lbfoot to x-axis <-3.752093> speed <487.360515> / animSpeed; //delta=-16.25 
			move lbleg to y-axis [1.443754] speed [73.728940] / animSpeed; //delta=2.46 
			turn lbleg to x-axis <-0.0> speed <584.451023> / animSpeed; //delta=19.48 
			turn lffoot to x-axis <1.115736> speed <193.623236> / animSpeed; //delta=6.45 
			move lfleg to y-axis [-3.314694] speed [47.258878] / animSpeed; //delta=-1.58 
			turn lfleg to x-axis <-25.309881> speed <151.963427> / animSpeed; //delta=5.07 
			turn rbfoot to x-axis <-0.0> speed <558.579120> / animSpeed; //delta=18.62 
			move rbleg to y-axis [-1.196503] speed [47.904142] / animSpeed; //delta=-1.60 
			turn rbleg to x-axis <-0.0> speed <578.917084> / animSpeed; //delta=-19.30 
			turn rffoot to x-axis <-42.724404> speed <576.366060> / animSpeed; //delta=19.21 
			move rfleg to y-axis [0.319000] speed [18.449937] / animSpeed; //delta=-0.61 
			turn rfleg to x-axis <44.531556> speed <612.473359> / animSpeed; //delta=-20.42 
			move torso to y-axis [1.0] speed [4.308779] / animSpeed; //delta=0.14 
			turn torso to x-axis <-0.341367> speed <10.241022> / animSpeed; //delta=0.34 
			turn torso to z-axis <0.459381> speed <5.142475> / animSpeed; //delta=0.17 
			turn turret to y-axis <3.0> speed <30.0> / animSpeed; //delta=1.00 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:30
			turn lbfoot to x-axis <19.443259> speed <695.860543> / animSpeed; //delta=-23.20 
			move lbleg to y-axis [1.788061] speed [10.329219] / animSpeed; //delta=0.34 
			turn lbleg to x-axis <-22.741834> speed <682.255012> / animSpeed; //delta=22.74 
			turn lffoot to x-axis <25.808623> speed <740.786599> / animSpeed; //delta=-24.69 
			move lfleg to y-axis [-4.251511] speed [28.104501] / animSpeed; //delta=-0.94 
			turn lfleg to x-axis <-26.768777> speed <43.766879> / animSpeed; //delta=1.46 
			turn rbfoot to x-axis <-14.338065> speed <430.141938> / animSpeed; //delta=14.34 
			move rbleg to y-axis [-2.334006] speed [34.125080] / animSpeed; //delta=-1.14 
			turn rbleg to x-axis <19.481701> speed <584.451023> / animSpeed; //delta=-19.48 
			turn rffoot to x-axis <-19.354488> speed <701.097472> / animSpeed; //delta=-23.37 
			move rfleg to y-axis [1.006599] speed [20.627969] / animSpeed; //delta=0.69 
			turn rfleg to x-axis <21.784940> speed <682.398497> / animSpeed; //delta=22.75 
			move torso to y-axis [0.870629] speed [3.881131] / animSpeed; //delta=-0.13 
			turn torso to x-axis <-0.0> speed <10.241022> / animSpeed; //delta=-0.34 
			turn torso to z-axis <-0.0> speed <13.781423> / animSpeed; //delta=0.46 
			turn turret to y-axis <2.0> speed <30.0> / animSpeed; //delta=-1.00 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:36
			//call-script lua_UnitScriptDecal(1, (get PIECE_XZ(rbfoot) & 0xffff0000) / 0x00010000 , (get PIECE_XZ(rbfoot) & 0x0000ffff),   get HEADING(0));
			turn lbfoot to x-axis <44.038608> speed <737.860470> / animSpeed; //delta=-24.60 
			move lbleg to y-axis [0.092369] speed [50.870780] / animSpeed; //delta=-1.70 
			turn lbleg to x-axis <-45.483671> speed <682.255114> / animSpeed; //delta=22.74 
			turn lffoot to x-axis <-0.0> speed <774.258684> / animSpeed; //delta=25.81 
			move lfleg to y-axis [-1.141006] speed [93.315160] / animSpeed; //delta=3.11 
			turn lfleg to x-axis <-0.900000> speed <776.063301> / animSpeed; //delta=-25.87 
			turn rbfoot to x-axis <-18.276130> speed <118.141953> / animSpeed; //delta=3.94 
			move rbleg to y-axis [-3.471509] speed [34.125080] / animSpeed; //delta=-1.14 
			turn rbleg to x-axis <38.963402> speed <584.451023> / animSpeed; //delta=-19.48 
			turn rffoot to x-axis <4.325368> speed <710.395694> / animSpeed; //delta=-23.68 
			move rfleg to y-axis [0.482331] speed [15.728052] / animSpeed; //delta=-0.52 
			turn rfleg to x-axis <-3.120163> speed <747.153070> / animSpeed; //delta=24.91 
			move torso to y-axis [1.065929] speed [5.859007] / animSpeed; //delta=0.20 
			turn torso to x-axis <0.463336> speed <13.900090> / animSpeed; //delta=-0.46 
			turn torso to z-axis <-0.426746> speed <12.802373> / animSpeed; //delta=0.43 
			turn turret to y-axis <0.0> speed <60.0> / animSpeed; //delta=-2.00 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:42
			turn lbfoot to x-axis <18.619304> speed <762.579112> / animSpeed; //delta=25.42 
			move lbleg to y-axis [0.400301] speed [9.237975] / animSpeed; //delta=0.31 
			turn lbleg to x-axis <-19.297236> speed <785.593042> / animSpeed; //delta=-26.19 
			turn lffoot to x-axis <-23.512202> speed <705.366067> / animSpeed; //delta=23.51 
			move lfleg to y-axis [0.933998] speed [62.250109] / animSpeed; //delta=2.08 
			turn lfleg to x-axis <24.115777> speed <750.473323> / animSpeed; //delta=-25.02 
			turn rbfoot to x-axis <-19.997443> speed <51.639406> / animSpeed; //delta=1.72 
			move rbleg to y-axis [-1.013877] speed [73.728948] / animSpeed; //delta=2.46 
			turn rbleg to x-axis <19.481701> speed <584.451023> / animSpeed; //delta=19.48 
			turn rffoot to x-axis <7.569844> speed <97.334281> / animSpeed; //delta=-3.24 
			move rfleg to y-axis [-1.739398] speed [66.651871] / animSpeed; //delta=-2.22 
			turn rfleg to x-axis <-20.244433> speed <513.728111> / animSpeed; //delta=17.12 
			move torso to y-axis [0.884884] speed [5.431355] / animSpeed; //delta=-0.18 
			turn torso to x-axis <-0.0> speed <13.900090> / animSpeed; //delta=0.46 
			turn torso to z-axis <-0.646290> speed <6.586326> / animSpeed; //delta=0.22 
			turn turret to y-axis <-2.0> speed <60.0> / animSpeed; //delta=-2.00 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:48
			call-script lua_UnitScriptDecal(1, (get PIECE_XZ(lffoot) & 0xffff0000) / 0x00010000 , (get PIECE_XZ(lffoot) & 0x0000ffff),   get HEADING(0));
			turn lbfoot to x-axis <-0.0> speed <558.579120> / animSpeed; //delta=18.62 
			move lbleg to y-axis [-1.196503] speed [47.904142] / animSpeed; //delta=-1.60 
			turn lbleg to x-axis <-0.0> speed <578.917084> / animSpeed; //delta=-19.30 
			turn lffoot to x-axis <-42.724404> speed <576.366060> / animSpeed; //delta=19.21 
			move lfleg to y-axis [0.319000] speed [18.449937] / animSpeed; //delta=-0.61 
			turn lfleg to x-axis <44.531556> speed <612.473359> / animSpeed; //delta=-20.42 
			turn rbfoot to x-axis <-3.752093> speed <487.360515> / animSpeed; //delta=-16.25 
			move rbleg to y-axis [1.443754] speed [73.728940] / animSpeed; //delta=2.46 
			turn rbleg to x-axis <-0.0> speed <584.451023> / animSpeed; //delta=19.48 
			turn rffoot to x-axis <1.115736> speed <193.623236> / animSpeed; //delta=6.45 
			move rfleg to y-axis [-3.314694] speed [47.258878] / animSpeed; //delta=-1.58 
			turn rfleg to x-axis <-25.309881> speed <151.963427> / animSpeed; //delta=5.07 
			move torso to y-axis [1.0] speed [3.453480] / animSpeed; //delta=0.12 
			turn torso to x-axis <-0.402352> speed <12.070557> / animSpeed; //delta=0.40 
			turn torso to z-axis <-0.451140> speed <5.854509> / animSpeed; //delta=-0.20 
			turn turret to y-axis <-3.0> speed <30.0> / animSpeed; //delta=-1.00 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:54
			turn lbfoot to x-axis <-14.338065> speed <430.141938> / animSpeed; //delta=14.34 
			move lbleg to y-axis [-2.334006] speed [34.125080] / animSpeed; //delta=-1.14 
			turn lbleg to x-axis <19.481701> speed <584.451023> / animSpeed; //delta=-19.48 
			turn lffoot to x-axis <-19.354488> speed <701.097472> / animSpeed; //delta=-23.37 
			move lfleg to y-axis [1.006599] speed [20.627969] / animSpeed; //delta=0.69 
			turn lfleg to x-axis <21.784940> speed <682.398497> / animSpeed; //delta=22.75 
			turn rbfoot to x-axis <19.443259> speed <695.860543> / animSpeed; //delta=-23.20 
			move rbleg to y-axis [1.788061] speed [10.329219] / animSpeed; //delta=0.34 
			turn rbleg to x-axis <-22.741834> speed <682.255012> / animSpeed; //delta=22.74 
			turn rffoot to x-axis <25.808623> speed <740.786599> / animSpeed; //delta=-24.69 
			move rfleg to y-axis [-4.251511] speed [28.104501] / animSpeed; //delta=-0.94 
			turn rfleg to x-axis <-26.768777> speed <43.766879> / animSpeed; //delta=1.46 
			move torso to y-axis [0.899139] speed [3.025836] / animSpeed; //delta=-0.10 
			turn torso to x-axis <-0.0> speed <12.070557> / animSpeed; //delta=-0.40 
			turn torso to z-axis <-0.0> speed <13.534190> / animSpeed; //delta=-0.45 
			turn turret to y-axis <-2.0> speed <30.0> / animSpeed; //delta=1.00 
		sleep ((33*animSpeed) -1);
		}
	}
}
// Call this from StopMoving()!
StopWalking() {
	move lbleg to y-axis [0.0] speed [12.288158];
	move lfleg to y-axis [0.0] speed [15.552527];
	move rbleg to y-axis [0.0] speed [12.288158];
	move rfleg to y-axis [0.0] speed [21.257555];
	move torso to y-axis [0.0] speed [2.500000];
	turn lbfoot to x-axis <0.0> speed <127.096519>;
	turn lbleg to x-axis <0.0> speed <130.932174>;
	turn lbleg to y-axis <-5.699999> speed <28.499997>;
	turn lffoot to x-axis <0.0> speed <194.749310>;
	turn lfleg to x-axis <0.0> speed <189.555149>;
	turn lfleg to y-axis <4.999999> speed <24.999997>;
	turn rbfoot to x-axis <0.0> speed <127.096519>;
	turn rbleg to x-axis <0.0> speed <130.932174>;
	turn rbleg to y-axis <5.600000> speed <27.999998>;
	turn rffoot to x-axis <0.0> speed <194.749310>;
	turn rfleg to x-axis <0.0> speed <189.555149>;
	turn rfleg to y-axis <-5.500000> speed <27.499998>;
	turn torso to x-axis <0.0> speed <5.0>;
	turn torso to z-axis <0.0> speed <5.0>;
	turn turret to x-axis <0.0> speed <10.550000>;
	turn turret to y-axis <0.0> speed <10.0>;
}
// REMEMBER TO animspeed = 6 in Create() !!
UnitSpeed(){
	maxSpeed = get MAX_SPEED; // this returns cob units per frame i think
	animFramesPerKeyframe = 6; //we need to calc the frames per keyframe value, from the known animtime
	maxSpeed = maxSpeed + (maxSpeed /(2*animFramesPerKeyframe)); // add fudge
	while(TRUE){
		animSpeed = (get CURRENT_SPEED);
		if (animSpeed<1) animSpeed=1;
		animSpeed = (maxSpeed * 6) / animSpeed; 
		//get PRINT(maxSpeed, animFramesPerKeyframe, animSpeed); //how to print debug info from bos
		if (animSpeed<3) animSpeed=3;
		if (animspeed>12) animSpeed = 12;
		sleep 197;
	}
}
StartMoving(reversing){
	isMoving = TRUE;
	signal SIGNAL_MOVE;
	set-signal-mask SIGNAL_MOVE;
	start-script Walk();
	start-script UnitSpeed();
}

StopMoving(){
	signal SIGNAL_MOVE;
	isMoving = FALSE;
	call-script StopWalking();
}

#define BASEPIECE torso
#define HITSPEED <45.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 10
#define MAXTILT 100

#include "../unit_hitbyweaponid_and_smoke.h"

Create()
{
	hide lflare;
	hide rflare;
	hide aimy1;
	isMoving = FALSE;
	isAiming = FALSE;
	animSpeed = 6;
	gun_1 = 0;
	restore_delay = 3000;
}

SetMaxReloadTime(reloadMS)
{
	restore_delay = reloadMS * 2;
}


RestoreAfterDelay()
{
	sleep restore_delay;
	turn aimy1 to y-axis <0.0> speed 1.5 * <90.0>;
	isAiming = FALSE;
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = turret;
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = lflare + gun_1;
}

AimWeapon1(heading, pitch)
{
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	isAiming = TRUE;
	turn aimy1 to y-axis heading speed 1.5 * <140.0>;
	wait-for-turn aimy1 around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon1()
{
	if( gun_1 == 0 )
	{
		move rbarrel to z-axis [-3] now;
		move rbarrel to z-axis [0] speed [6];
	}
	else
	{
		move lbarrel to z-axis [-3] now;
		move lbarrel to z-axis [0] speed [6];
	}
	gun_1 = !gun_1;
}

//use call-script DeathAnim(); from Killed()
DeathAnim() {// For N:\animations\corsumo_anim_death.blend Created by https://github.com/Beherith/Skeletor_S3O V((0, 2, 8)) 
	signal SIGNAL_MOVE;
	signal SIGNAL_AIM1;
	call-script StopWalking();
	turn aimy1 to y-axis <0> speed <60>;
		if (TRUE) { //Frame:10
			turn lbfoot to x-axis <-14.199999> speed <42.599997> ; //delta=14.20 
			turn lbleg to x-axis <18.299999> speed <54.899998> ; //delta=-18.30 
			turn lffoot to x-axis <-33.599999> speed <100.799997> ; //delta=33.60 
			turn lfleg to x-axis <-26.199998> speed <78.599993> ; //delta=26.20 
			turn lfleg to y-axis <17.599999> speed <37.799999> ; //delta=12.60 
			turn rbfoot to x-axis <-15.599998> speed <46.799995> ; //delta=15.60 
			turn rbleg to x-axis <22.899999> speed <68.699996> ; //delta=-22.90 
			turn rffoot to x-axis <-38.499997> speed <115.499991> ; //delta=38.50 
			turn rfleg to x-axis <-22.299999> speed <66.899997> ; //delta=22.30 
			turn rfleg to y-axis <-18.499998> speed <38.999994> ; //delta=-13.00 
			move torso to y-axis [-2.200000] speed [6.599999] ; //delta=-2.20 
			turn torso to x-axis <5.300000> speed <15.899999> ; //delta=-5.30 
		sleep 329;
		}
		if (TRUE) { //Frame:18
			turn lbfoot to x-axis <-24.999998> speed <40.499997> ; //delta=10.80 
			turn lbleg to x-axis <24.799999> speed <24.374996> ; //delta=-6.50 
			turn lffoot to x-axis <-41.599998> speed <29.999997> ; //delta=8.00 
			turn lfleg to x-axis <-39.599996> speed <50.249992> ; //delta=13.40 
			turn lfleg to y-axis <23.899998> speed <23.624997> ; //delta=6.30 
			turn rbfoot to x-axis <-25.999998> speed <38.999998> ; //delta=10.40 
			turn rbleg to x-axis <29.799999> speed <25.875002> ; //delta=-6.90 
			turn rffoot to x-axis <-49.699994> speed <41.999990> ; //delta=11.20 
			turn rfleg to x-axis <-29.900000> speed <28.500004> ; //delta=7.60 
			turn rfleg to y-axis <-22.299997> speed <14.249999> ; //delta=-3.80 
			move torso to y-axis [-4.630000] speed [9.112499] ; //delta=-2.43 
			turn torso to x-axis <9.800000> speed <16.875000> ; //delta=-4.50 
		sleep 263;
		}
		if (TRUE) { //Frame:22
			turn lbfoot to x-axis <-38.499997> speed <101.249990> ; //delta=13.50 
			turn lbleg to x-axis <35.899997> speed <83.249987> ; //delta=-11.10 
			turn lffoot to x-axis <-47.699999> speed <45.750007> ; //delta=6.10 
			turn lfleg to x-axis <-38.235628> speed <10.232759> ; //delta=-1.36 
			turn rbfoot to x-axis <-38.499997> speed <93.749994> ; //delta=12.50 
			turn rbleg to x-axis <36.099998> speed <47.249994> ; //delta=-6.30 
			turn rffoot to x-axis <-67.999997> speed <137.250022> ; //delta=18.30 
			turn rfleg to x-axis <-28.022110> speed <14.084179> ; //delta=-1.88 
			move torso to y-axis [-6.610000] speed [14.850000] ; //delta=-1.98 
			turn torso to x-axis <9.500000> speed <2.249999> ; //delta=0.30 
		sleep 131;
		}
		if (TRUE) { //Frame:27
			turn lbfoot to x-axis <-29.999997> speed <50.999998> ; //delta=-8.50 
			turn lbleg to x-axis <23.399998> speed <74.999995> ; //delta=12.50 
			turn lfleg to x-axis <-32.999998> speed <31.413782> ; //delta=-5.24 
			turn rbfoot to x-axis <-31.399998> speed <42.599992> ; //delta=-7.10 
			turn rbleg to x-axis <22.899999> speed <79.199998> ; //delta=13.20 
			turn rfleg to x-axis <-22.700001> speed <31.932654> ; //delta=-5.32 
			move torso to y-axis [-4.820000] speed [10.740000] ; //delta=1.79 
			move turret to x-axis [1.432575] speed [8.595448] ; //delta=1.43 
			move turret to z-axis [-39.246407] speed [235.478439] ; //delta=-39.25 
			explode turret type FALL|SMOKE|FIRE|NOHEATCLOUD;
			hide turret;
			explode rbarrel type FALL|SMOKE|FIRE|NOHEATCLOUD;
			hide rbarrel;
			explode rflare type FALL|SMOKE|FIRE|NOHEATCLOUD;
			hide rflare;
			explode lbarrel type FALL|SMOKE|FIRE|NOHEATCLOUD;
			hide lbarrel;
			explode lflare type FALL|SMOKE|FIRE|NOHEATCLOUD;
			hide lflare;
		sleep 164;
		}
		if (TRUE) { //Frame:34
			turn lbfoot to x-axis <-44.499997> speed <62.142856> ; //delta=14.50 
			turn lbleg to x-axis <31.699997> speed <35.571428> ; //delta=-8.30 
			turn lffoot to x-axis <-65.430992> speed <75.989972> ; //delta=17.73 
			turn lfleg to x-axis <-21.983350> speed <47.214205> ; //delta=-11.02 
			turn rbfoot to x-axis <-42.899995> speed <49.285699> ; //delta=11.50 
			turn rbleg to x-axis <32.299999> speed <40.285714> ; //delta=-9.40 
			turn rffoot to x-axis <-77.701864> speed <41.579430> ; //delta=9.70 
			turn rfleg to x-axis <-15.928187> speed <29.022057> ; //delta=-6.77 
			move torso to y-axis [-7.250000] speed [10.414285] ; //delta=-2.43 
		sleep 230;
		}
		if (TRUE) { //Frame:40
			turn lffoot to x-axis <-79.500001> speed <70.345040> ; //delta=14.07 
			turn lfleg to x-axis <-16.999999> speed <24.916752> ; //delta=-4.98 
			turn rffoot to x-axis <-85.400000> speed <38.490677> ; //delta=7.70 
			turn rfleg to x-axis <-13.600001> speed <11.640930> ; //delta=-2.33 
		sleep 197;
		}
}
Killed(severity, corpsetype)
{
	hide lflare;
	hide rflare;
	if( severity <= 25 )
	{
		call-script DeathAnim();
		corpsetype = 1;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode Lbarrel type FALL | BITMAP4 | NOHEATCLOUD;
		explode lflare type FALL | BITMAP1 | NOHEATCLOUD;
		explode Rbarrel type FALL | BITMAP3 | NOHEATCLOUD;
		explode turret type FALL | BITMAP4 | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode Lbarrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4 | NOHEATCLOUD;
		explode lflare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
		explode Rbarrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
		explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4 | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode Lbarrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4 | NOHEATCLOUD;
	explode lflare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
	explode Rbarrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
	explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4 | NOHEATCLOUD;
	return (corpsetype);
}
