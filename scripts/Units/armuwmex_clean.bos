
#include "../recoil_common_includes.h"

piece  base, spinner, emit;

static-var  resourceRate;

// Signal definitions
#define SIGNAL_TURNON 4


Create()
{
	hide emit;
	resourceRate = 0;
}

Activate()
{

	spin spinner around y-axis speed resourceRate accelerate 90;
	signal SIGNAL_TURNON;
	set-signal-mask SIGNAL_TURNON;
	while( TRUE )
	{
		emit-sfx 259 from emit;
		sleep 250;
	}
}

Deactivate()
{
	stop-spin spinner around y-axis decelerate 180;
	signal SIGNAL_TURNON;
}



SetSpeed(windOrMetal)
{
	resourceRate = windOrMetal * 20;
	if (resourceRate > 0) call-script Activate(); // Because SetSpeed is called after Activate
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode spinner type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode emit type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode spinner type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode emit type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode spinner type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode emit type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode spinner type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode emit type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}
