#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, fan, cradle;

static-var  WindSpeed, WindDirection, LastDirection, Built, Stunned;


Go()
{
	sleep RAND(1, 500);

	//get PRINT(get GAME_FRAME, WindSpeed, WindDirection);
	//No wind direction, because it's vertical turbine.

	spin cradle around y-axis speed WindSpeed / -5.0 accelerate <1.0>;
	spin fan around y-axis speed WindSpeed accelerate <1.0>;
	//The angular acceleration should always be positive, even if you are spinning the piece at a negative angular speed.
	//It is measured in Spring angles per frame-second (sa/f*s); in other words, 
	//the speed of the piece will increase by that amount every frame, not every second. There are 30 frames per second. 
	//spin [piece] around [axis] speed [angular speed] accelerate [angular acceleration];
	
}

Create()
{
	WindSpeed = 800;
	WindDirection = 0;
	LastDirection = 0;
	Built = 0;	
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	Built = 1;
	call-script Go();
}

#define SMOKEPIECE base
#include "smokeunit_thread_nohit.h"

SetSpeed(windSpd) //called every 450 frames
{
	WindSpeed = windSpd; //invert if desired
	if (!Stunned) {
		if(Built)
		{
			set ACTIVATION to 100;
		}
	}
}

SetDirection(windDir) //called every 450 frames
{
	LastDirection = WindDirection;
	WindDirection = windDir;
	
	if (!Stunned) {
		if(Built)
		{
			call-script Go();
		}
	}
}

Stop()
{
	stop-spin fan around y-axis decelerate <10.0>;
}

SetStunned(State)
{
	Stunned = State;
	if (State) {
		call-script Stop();
		set ACTIVATION to 0;
	}else{
		call-script Go();
		set ACTIVATION to 100;
	}
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode cradle type BITMAPONLY | NOHEATCLOUD;
		explode fan type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode cradle type BITMAPONLY | NOHEATCLOUD;
		explode fan type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode cradle type BITMAPONLY | NOHEATCLOUD;
		explode fan type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode cradle type BITMAPONLY | NOHEATCLOUD;
		explode fan type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
