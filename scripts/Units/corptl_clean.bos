
#include "../recoil_common_includes.h"

piece  base, flare, gun, pointer;

// Signal definitions
#define SIGNAL_AIM1 256

#define BASEPIECE base
#define HITSPEED <20.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 5
#define MAXTILT 200

#include "../unit_hitbyweaponid_and_smoke.h"

Create()
{
}

AimWeapon1(heading, pitch)
{
	signal SIGNAL_AIM1;
	set-signal-mask SIGNAL_AIM1;
	turn gun to y-axis heading speed <140.0>;
	wait-for-turn gun around y-axis;
	return (1);
}

AimFromWeapon1(pieceIndex)
{
	pieceIndex = base;
}

QueryWeapon1(pieceIndex)
{
	pieceIndex = flare;
}



Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode flare type FALL | BITMAP2 | NOHEATCLOUD;
		explode gun type FIRE | SMOKE | FALL | BITMAP3 | NOHEATCLOUD;
		explode pointer type FALL | BITMAP4 | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode flare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2 | NOHEATCLOUD;
		explode gun type FIRE | SMOKE | FALL | BITMAP3 | NOHEATCLOUD;
		explode pointer type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4 | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode flare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2 | NOHEATCLOUD;
	explode gun type FIRE | SMOKE | FALL | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
	explode pointer type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4 | NOHEATCLOUD;
	return corpsetype;
}
