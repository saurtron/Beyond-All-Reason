#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

// piece  flare1, flare2, flare3, flare4, base, xturret, barrel1, barrel2, barrel3, barrel4, yturret1, yturret2;
piece base, turret, strut, barrel, flare, radar, radarSpinEMPTY;

static-var  gun_1;

// Signal definitions
#define SIG_AIM				2

#define SMOKEPIECE base
#include "smokeunit_thread_nohit.h"

static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }

	spin turret around y-axis speed <25.0>;
	turn strut to x-axis <-30> speed <25.0>;

}
SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}
RestoreAfterDelay()
{
	sleep 5000;
	start-script ExecuteRestoreAfterDelay();
}

Create()
{
	hide flare;
	turn radarSpinEMPTY to x-axis <31.2> now;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	spin radar around y-axis speed <-50.0>;
	start-script ExecuteRestoreAfterDelay();
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;

	turn turret to y-axis heading speed <1200>;
	// turn barrel to x-axis <0> - pitch speed <950>;
	turn strut to x-axis <0> - pitch speed <950>;
	wait-for-turn turret around y-axis;
	wait-for-turn barrel around x-axis;

	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	emit-sfx 1024 + 0 from flare;
	sleep 100;
	return (0);
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

AimFromPrimary(piecenum)
{
	piecenum = barrel;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode strut type BITMAPONLY | NOHEATCLOUD;
		explode radar type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrel type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode strut type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode radar type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrel type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode strut type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode radar type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrel type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode strut type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode radar type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrel type FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
